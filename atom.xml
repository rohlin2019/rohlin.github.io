<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>程序员小鸿 - 00后程序员</title>
  
  <subtitle>程序员小鸿个人博客、技术分析、经验分享</subtitle>
  <link href="/rohlin.github.io/atom.xml" rel="self"/>
  
  <link href="https://rohlin2019.github.io/rohlin.github.io/"/>
  <updated>2019-08-02T03:24:24.955Z</updated>
  <id>https://rohlin2019.github.io/rohlin.github.io/</id>
  
  <author>
    <name>程序员小鸿</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>【推荐】你不知道的20种黑帽seo技术大揭秘！附黑客专业术语</title>
    <link href="https://rohlin2019.github.io/rohlin.github.io/2019/07/05/%E3%80%90%E6%8E%A8%E8%8D%90%E3%80%91%E4%BD%A0%E4%B8%8D%E7%9F%A5%E9%81%93%E7%9A%8420%E7%A7%8D%E9%BB%91%E5%B8%BDseo%E6%8A%80%E6%9C%AF%E5%A4%A7%E6%8F%AD%E7%A7%98%EF%BC%81%E9%99%84%E9%BB%91%E5%AE%A2%E4%B8%93%E4%B8%9A%E6%9C%AF%E8%AF%AD/"/>
    <id>https://rohlin2019.github.io/rohlin.github.io/2019/07/05/【推荐】你不知道的20种黑帽seo技术大揭秘！附黑客专业术语/</id>
    <published>2019-07-05T03:03:17.000Z</published>
    <updated>2019-08-02T03:24:24.955Z</updated>
    
    <content type="html"><![CDATA[<p><font color="red">友情提醒</font>：以下文章来源网络，部分白杨SEO说明。同时，这些黑帽SEO方法知道就行，最好不要去操作。<font color="blue">做人做事有底线，眼光要看长远。</font>某天说自己站被K了，可能并不是无辜的~</p><h5 id="正文如下："><a href="#正文如下：" class="headerlink" title="正文如下："></a>正文如下：</h5><p>我们一说到网站作弊方法，那就不得不说SEO优化中的黑帽SEO了，黑帽SEO主要是研究和利用搜索引擎算法漏洞，其手法不符合主流搜索引擎发行方针规定，优化方法采用的也是搜索引擎禁止的方式去优化网站的，影响搜索引擎对网站排名的合理和公正性。</p><p>黑帽SEO行为通常也就是一般人们所讲的“搜索引擎作弊行为”，通常的黑帽SEO是利用和放大搜索引擎的现在有的缺陷或漏洞而获取更多的用户访问流量。简单的说，黑帽seo优化就是使用作弊手段或有可疑手段在短时间内获取大量流量。同时随时可能因为搜索引擎算法的改变而面临惩罚。</p><p>很多人之所以热衷于SEO作弊，热衷于黑帽SEO，主要是因为做白帽SEO要花更多的时间和精力，而且也并不能百分之百保证一定能做出一个成功的网站。但相对于网站来说白帽SEO却更加的安全，一旦成功，网站就可以维持排名和流量，成为一份高质量的资产。</p><p>黑帽SEO的特点就是周期短，见效快，实施成本低。往往有很多SEOer太过于急功近利，为了追求一时的排名，喜走捷径，剑走偏锋，而采用的作弊方法。</p><p>而搜索引擎也是很痛恨黑帽SEO的，因为这种网站作弊行为降低了搜索结果相关性和用户体验，动了搜索引擎的饭碗，属于必须严厉打击的范围。一旦被惩罚，就要经过一个漫长的恢复过程。所以做黑帽SEO被惩罚是正常的，甚至可以说，长远来看，是必然的。</p><p>为了提醒大家因为误操作进入黑帽SEO的怪圈，分享以下20个黑帽SEO网站常见的作弊的方法。</p><br><p><strong>一：能被搜索引擎快速识别的关键字堆砌</strong></p><p>关键字堆砌是黑帽seo方法中的一种，英文称KeywordStuffing，通过在网页中大量重复关键词，提高关键词的密度，达到提高关键词排名的效果。关键词堆砌是比较低级的一种手法，短时间内可以获得很不错的排名。可目前来说，这种手法已经是过去时了，搜索引擎判断这种作弊行为的算法已经相当成熟，所以，一旦网页上出现关键词堆砌现象，网站很容易被惩罚。</p><br><p><font color="blue">网站seo作弊之关键字堆砌</font></p><p>关键字堆砌是指在一个网页中非常密集地放置关键字。关键字堆砌的常见形式，如：标题、Tag、关键词标签、说明标签、文章内容页高度重复关键词等。</p><p>1、标题描述标签中堆砌关键词</p><p>众所周知，标题是SEO中比较重要的一个部分，很多人将大量的关键地都堆砌在标题中，例如“SEO-seo培训-SEO服务-SEO优化-seo顾问-SEO教程-SEO排名”，这种写法算是堆砌的比较轻微的，有的人甚至会堆砌几十个类似的关键词，如果将这种文字都放入标题中，则就形成了对SEO这个词的堆砌。建议标题中相同关键词出现的次数最多不要超过3次。当然这个也不是必须的，还需要了解百度分词，合理的去分布标题关键词。</p><br><p>2、网页中堆砌关键词</p><p>关键词的密度直接影响了这个关键词在搜索引擎中的排名，关键词密度越高，则说明这个关键词在该网页中的重要性越大，所以SEO行业内有个名词叫做“关键词布局”，但是黑帽seo人员，只为了提高关键词的密度，而在网页中将关键词乱堆一气。在以前这一方法可能很有用，但是现在一味的在内容中堆砌关键词而没有合格的内容，可能会有那么一点效果，但是很快就会被搜索处理，并且现在的互联网追求的是与用户的互动，网站一味堆砌关键词，毫无看点肯定是不利于用户体验，伤害了用户。</p><br><p>3、ALT标签堆砌关键词</p><p>在ALT标签的关键字堆砌这个很简单，就是在图片的alt标签中添加毫无关系的关键词或添加很多的关键词。</p><br><p><strong>二：桥页</strong></p><p>桥页(doorwaypages)，也叫门页、跳页、过渡页，桥页通常是针对特定的关键字词组或短语，用软件自动生成大量低质量包含关键词的网页，然后从这些网页做自动转向到主页。</p><p>目的是希望这些以不同关键词为目标的桥页在搜索引擎中得到好的排名。当用户点击搜索结果的时候，会自动转到主页。有的时候是在桥页上放上一个通往主页的链接，而不自动转向。桥页包括多个链接(往往是数百个)，对访问者用处极小或无用，不包含有价值的内容。桥页生成的文字往往是杂乱无章的，没有什么逻辑。如果是由人写出来的真正包含关键词的文章，就不是桥页了。</p><p><font color="blue">网站seo作弊之桥页</font></p><p>桥页的惩罚，如A页是桥页，B页是网站。如果访问A页那么弹出B页，搜索引擎会根据用户停留在A页的时间来判断A页是不是桥页。现在的搜索引擎越来越智能了。搜索引擎惩罚的话，从道理上将应该是惩罚A页。如果惩罚B页的话，那么会有无数的无辜网站会遭到恶意竞争对手的桥页“攻击”。</p><p>桥页是以前时常涌现的黑帽方法之一，当做优化的时候，桥页都会专门做一个页面，全体嵌入关键词，并且关键词全部加粗加超链接到首页，就是为了可以提高关键词呈现率，并且快捷的剪刀后果，这个方法比拟快，但是搜索引擎也会对这样的网站进行查封。</p><p>桥页代码举例如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;白杨seoSEO博客&lt;<span class="regexp">/title&gt;</span></span><br><span class="line"><span class="regexp">        &lt;meta name=”description” content=”白杨seoSEO博客” /</span>&gt;</span><br><span class="line">        &lt;meta name=”keywords” content=”白杨seoSEO博客” /&gt;</span><br><span class="line">        &lt;meta http-equiv=”refresh” content=”<span class="number">0</span>″; rul=”http:<span class="comment">//www.xminseo.com” /&gt;</span></span><br><span class="line">    &lt;<span class="regexp">/head&gt;</span></span><br><span class="line"><span class="regexp">    &lt;body&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>body&gt;</span><br><span class="line">&lt;<span class="regexp">/html&gt;</span></span><br></pre></td></tr></table></figure><p><strong>三：隐藏链接(黑链)</strong><br>隐藏链接：通常也被称之为黑链，也叫暗链、隐链；指的是正常的链接通过一些方法，如：把链接放入js代码中，使用display:none等等，从而使用户在正常浏览网页的时候无法看到这个链接。</p><p>隐藏链接和隐藏文字(hidden text)相似，但是区别是把关键词放在链接里面，而这个链接也是用户所看不到的。</p><p>新手站长在跟其它网站交换链接的时候，可能会被蒙蔽，有的站长在给对方做友情链接的时候通过使用CSS来控制隐藏链接的方式也不少见，也有部份人通过提供免费的网站程序，博客风格，网站插件等方法把黑链植入到你的网站。</p><p>随着现在友情链接交易平台的盛行，不少无良的“黑客”或服务器管理人员，开始通过挂黑链的方式为自己谋利。黑链是通过技术手段扫描FTP和服务器的弱口令，网站漏洞，获取对方网站的管理权限，然后黑掉网站，在网页中添加指向自己网站的隐形锚文本连接挂进，从而快速提升网站排名。这手法一般在网站前台是无法看到的，只能通过查看源代码才能发现，一般是用CSS隐藏，也有用JS输出CSS。</p><p>我们知道百度排名算法中有一个很重要的因素就是基于超链接分析技术，当一个站点被越多的站点给链接的时候，那么这个站点的权重也会相对随之提升的。但是这并不包括隐藏链接这种手段所带来的链接数量，因为隐藏链接在搜索引擎看来是一种欺骗手段，所以必定会影响一个站点的权重正常传递。</p><p>搜索引擎谷歌和百度早就提出，搜索引擎是不欢迎黑链的，隐藏链接是被搜索引擎严令禁止的，一旦发现，惩罚将会非常严重，轻则降低网页权重，严重甚至拔毛K站。</p><p>所以提醒下各位新手站长在跟对方交换友情链接成功后，也要看下对方网站给您交换链接对应的HTML源代码是否正常。假如说你的网站当前做了隐藏链接，建议你把隐蔽链接去掉，以免搜索引擎发现k掉你的网站。</p><br><p><strong>四：隐藏文字</strong></p><p>隐藏文字是在网页的HTML文件中放上含有关键词的文字，但这些字不能被用户所看到，只能被搜索引擎看到，这个很黑链很相似。</p><p><font color="blue">网站seo作弊之隐藏文字</font></p><p>隐藏文字的方法可以有几种形式，比如：颜色隐藏：通过将文字与背景设置为相同颜色，达到隐藏的效果；DIV隐藏链接；javascript隐藏链接；静态页面黑链代码；CSS隐藏链接代码(挂黑链常用此手段)；小字号隐藏：将文字大小设置为1的细微文字或微型文字，并且放在不起眼的角落，用户很难察觉到，而搜索引擎却可以正常读取到。</p><p>隐藏文字这种作弊方式，通常是某些黑客常用的方式，入侵某个网站后，为了不让管理员发现，便把文字的颜色和网页的seo关键字排名优化颜色设置成一致，用肉眼无法看出，只让搜素引擎看见而让浏览者看不见。</p><p>隐藏关键词的目的就是为了增加页面关键词的密度，想提高网页的相关性，以达到优化的效果。有的时候，有的人还在这些地方放上与网站内容无关的，但是很热门的关键词，希望网页能在这些热门关键词下得到好的排名和流量。</p><p>其实隐藏文字说白了就是欺骗搜索引擎，现在的搜索引擎已经能轻易的识别这些技术，网站一但被搜索引擎发现隐藏堆砌关键字，轻则降权重，重则网站直接被K或被屏蔽。建议各位最好不要使用这种手段去提高关键词排名。</p><br><p><strong>五：隐藏页面</strong></p><p>隐藏页面(cloakedpage)也叫斗蓬法或障眼法，是专门针对搜索引擎在爬取网站页面时显示的经过特别优化的页面，指有的网页使用程序或脚本来检测来访问的是搜索引擎还是普通用户。通过在服务器上设置cloaked页面来读取和判断当前访问者是真实的访问者还是搜索引擎蜘蛛，然后根据服务器配置好的脚本有针对性的给予真实访问者和搜索引擎蜘蛛作出响应，给予对应的返回页面展示。如果是搜索引擎，网页就返回经过优化的网页版本。如果来访的是普通人，返回的是另外一个版本。</p><p>隐藏页面也是一种障眼法,为黑帽seo技术之一，这种手法意图蒙骗搜索引擎，来影响该网站的网页在搜索引擎中获取较好的排名，通常用户无法发现。因为一旦你的浏览器去看这个网页，无论是在页面上还是在HTML源文件中，你所得到的都已经是与搜索引擎看到的不同的版本。建议最简单检测的方法是，看一下这个网页的快照。隐藏页面手法如被发现，该网站会永暂从搜索引擎名单中被剔除。</p><br><p><strong>六：网页劫持</strong></p><p>网页劫持也就是我们经常所说的pagejacking，是将别人的网站内容或者整个网站全面复制下来，偷梁换柱放在自己的网站上。而欺骗性重定向，鬼域与其类似。</p><p>这种黑帽SEO手法对网页内容极其匮乏的站长是有吸引力的。但是，这个做法是相当冒险的，更是为人所不齿的。搜索引擎的专利技术能从多个因素上来判断这个被复制的网页或网站不是原创，而不予以收录。这种做法已经被google左侧排名优化搜索引擎从多个方面来判断重复网页是不是原创，所以这种网页劫持的方式用的也越来越少。</p><br><p><strong>七：PR劫持</strong></p><p>PR劫持使用欺骗手段获得工具条上比较高的PR显示。方式是利用301和302定向的功能。从域名A使用301或302转向到域名B，而域名B的PR值较高，域名A在PR更新后，也会显示域名B的PR值。最简单的就是先做301或302跳转到高PR的域名B，等PR更新过后，立刻取消转向，同时也获得了和B站相同的PR值。据我们做seo的经验来看，这个做假的PR显示值至少维持到下一次PR更新，一般有两三个月或更长的时间(最近google更新有点慢)。这样可以获得比网站真实pr值高很多的pr数值。</p><br><p><font color="blue">网站seo作弊之pr劫持</font></p><p>那么如何检查是否是pr劫持呢？</p><p>方法1：</p><p>使用官方PR检测网站来检测。如：<a href="http://checkpagerank.net。" target="_blank" rel="noopener">http://checkpagerank.net。</a></p><br><p>方法2：</p><p>看Google的网页快照，Google快照和你看到的网页不是同一个网站，(一般网站标题和logo都会显示出来)，就非常可疑了，网页快照里面的那个网站就是PR劫持的目标网站。该方法的缺陷：只要该网站劫持结束后更新到自己的网站，Google会重新收录新网站，那这个时候就看不出原来网站的痕迹，那就无法确认PR是否劫持，更无法知道劫持的哪个网站了。该方法只适用于劫持目标网站后转换到自己的网站不久。</p><br><p>方法3：</p><p>查看反向链接，再根据反向链接来判断真实的网站是哪个。例如：登陆google，在搜索框中输入：link:xminseo.com，搜索结果中的网站就是向该网站提供反向链接的，任意打开一个，在里面查找xminseo.com的链接，没有发现。再随机找几个，依然没有发现，这就说明该站的PR是劫持的(多找几个网站可以增加这个判断结果的可信度)。</p><p>确定了该网站是PR劫持，下面就查找该网站劫持的哪个网站的PR，可以这样做：看link出来的结果中哪个站的结果比较多，一般就是这个网站。因为link的结果中与被劫持PR的网站link是一样的，而被劫持PR的网站内页链接到主域名的比较多，所以一般结果比较多的那个站就是被劫持的网站。</p><p><strong>八：蜘蛛劫持</strong></p><p>蜘蛛劫持就是SEOER通过各种非正常手段，劫持搜索引擎蜘蛛(如：百度蜘蛛、谷歌蜘蛛)，其表现为：百度快照是一个页面，用户点击进入网站后看到的是另一个页面。通常是根据访客的user-agent的不同来进行此操作。</p><br><p>搜索引擎蜘蛛劫持的技术原理：</p><p>蜘蛛劫持的技术原理是通过黑客手段进入猎取站点，在其中一文件夹或者根目录上传一个文件(快照文件，给搜索引擎看的)来达到劫持猎取站点的蜘蛛，进入目标站点。大家都知道网站流量中很大一部分是来自于蜘蛛，蜘蛛劫持的目的就是劫持搜索引擎蜘蛛以及搜索引擎流量导入目标网站。</p><br><p>蜘蛛劫持问题的解决方法：</p><p>如果发现自己的网站有被蜘蛛劫持的问题，第一时间检查自己的网站空间中是否存在木马文件，一般情况下都是这种global.asa，这个时候就要把这个文件名字重命名，这个时候这个木马程序就不会被别人控制了，因为这种木马文件我们是删处不掉的，只有空间商才有权限删除。木马文件重命名后在让空间商帮忙删除这个木马文件。</p><p>有点值得各位SEO人员注意的是蜘蛛劫持和前面说的隐藏页面都是呈现给搜素引擎和用户是不一样的页面，但是本质是不一样的，隐藏页面的内容是同一个网站，只不过为了排名而呈现2中版本的页面，而蜘蛛劫持所展示的是2个网站，为的是盗取别人网站的流量。</p><p>还有一种和蜘蛛劫持类似的就是快照劫持，快照劫持就别人是在你不工作的时候进入你的网站的，一般是凌晨1点到5、6点这段时间(当然时间是不一定的)。他们通过各种手段进入你的网站后台，把网站的mate标签和title找成他们网站相关的内容，再等到蜘蛛抓取之后再把原来的信息再换回来，这样神不知鬼不觉，你也不会很轻易的发现什么。因此，第二天的快照就会变成劫持者的网站，这就导致了你的快照被劫持。有的时候别人是纯粹的快照劫持，没有劫持上面所说的搜索引擎蜘蛛。但是当发现快照不一致时我们也需要检查网站后台有没有global.asa文件。</p><p><strong>九：垃圾链接</strong></p><p>垃圾链接是指为达到快速的关键词排名目的，在各大论坛和博客发布和主题内容不相关的链接和自动生成(采集)网页中含有的链接，称为垃圾链接。这种方式相信大家以前都或多或少有干过，所有搜索引擎都把外链当作排名的主要因素之一，而从其他网站获得自然链接也不是那么轻松的事情，所以垃圾链接就运应而生了。</p><br><p>垃圾链接基本特征：</p><p>1、主要出现在论坛和博客的评论和留言中且无贡献值。<br>2、自动生成(主要指采集页面)的页面产生的链接。<br>3、页面内容和Title以及描述严重不符的网页输出链接。<br>4、自动评论和顶贴软件生成的链接(如：论坛顶贴机和博客群发群件软件)。</p><br><p>垃圾链接不会马上被识别，而是事后审查并去除其权重，最终导致降权。垃圾链接在未识别之前会被计入关键词排名权重。现在搜索引擎对这种垃圾链接打击本身很严重，各类承载平台的审核力度也在加强。就算勉强暂时通过，以后被搜索引擎或网站管理人员发现处理之后会造成网站较大的外链波动，同时还可能带来很多的死链，所以我觉得对自己的网站而言，这种黑帽seo手法和堆砌关键词一样都是即没多大用又容易被发现的手法。建议大家还要经常去查看自己网站外链，用外链工具删除别人的恶意投放外链。</p><p><strong>十：网站镜像</strong></p><p>网站镜像是通过复制整个网站或部分网页内容并分配以不同域名和服务器，以此欺骗搜索引擎对同一站点或同一页面进行多次索引的行为，这既是为什么有的网站注明禁止未授权不得做网站镜像的原因了，两个网站的完全一样，相似度过高必然会导致自己的网站受到影响。</p><p><font color="blue">网站seo作弊之网站镜像</font></p><p>网站镜像可以起到分流作用：当一个网站的流量过高，服务器不能承受的时候，那么这时候就能起到给服务器减压分流的作用。同时如果不能对主站作正常访问(如某个服务器死掉或出了意外)，但仍能通过其它服务器正常浏览。</p><p>但是这种手法容易被搜索引擎识别为作弊手法，导致自己的站点受到影响。来回的切换比较麻烦。一旦自己的网站被镜像，网站的品牌形象就会受损。建议大家千万别把所有的域名都指向一个站，或者绑定复制的网站，不要认为这样做能增加主站的权重和PR，大错特错。</p><p>同样是作弊，搜索引擎为了避免关键词的地位被一家包揽，对镜像网站的处分是十分之狠，被搜索引擎识别后，不仅k掉你的网站，并且永恒封掉你的域名和服务器地址，在服务器所有的网站都会随着不幸。不过可以做一个镜像站后禁止搜索引擎访问就可以为主机服务器分流同时防止主机服务器出现问题打不开。</p><br><p><strong>十一：诱饵替换</strong></p><p>诱饵替换是黑帽SEO的技术手段之一，诱饵替换利用了搜索引擎的记忆特性，我们经常在搜索引擎结果中看到这种现象，页面内容完全改变后，原来的页面排名并不会立即消失。甚至在搜索引擎重新捉取页面新内容后，也不会立即消失，而是维持一段时间。</p><p>这是由于搜索引擎具有短期的记忆特性，再加上诱饵替换页面被重新抓取就需要一段时间，所以诱饵替换页面往往能在原来正当或比较容易的关键词搜索中保持一段时间的排名。有的人为了延长该页面排名存在的时间，甚至取得排名替换内容后直接用robots来禁止搜索引擎抓取。这种诱饵替换一旦发现就会被惩罚，不过一般做这些诱饵链接的人是有准备的，大不了在弄个页面就行了，反正做一个简单关键词上去很容易。</p><p>诱饵替换指的是作弊者先针对一些普通关键词制作页面获得排名后，页面再换成其他内容。一般分为两种情况：</p><p>第一种是针对竞争比较低的长尾关键词制作页面，获得排名但和点击后，把页面全部换成与热门关键词相关的商业价值更高的内容。</p><p>第二种是针对普通用户正当的关键词制作内容，获得排名后再把页面换成非法、成人、赌博等内容。这类作弊大多用于一些短期暴利行业，从介绍就可以看出搜索引擎再次更新后任何排名将不复存在。</p><br><p><strong>十二：文章内容采集</strong></p><p>说到内容采集相信大家都是太熟悉了，基本所有SEOer都“采集”过一些内容，内容采集可以使用CMS程序自带或软件的采集功能，填充大量质量低劣的网站内容和垃圾信息。当然，大量采集网络中的重复内容，最终的结果我想各位SEOer心里都应该清楚。</p><p>网络文章内容采集</p><p>常见的应用手法有：利用采集器软件和伪原创工具进行制造垃圾。</p><br><p>1、采集器</p><p>一些采集器具有的内容采集和数据导入功能能将您采集的任何网页数据发布到远程服务器，业界对采集内容都是嗤之以鼻的，尽管通过采集的手段来更新网站内容是大多数站长所抵制的，但每时每刻依然有很多的站长利用各种手段进行内容采集。</p><p>通过采集程序来抓取别人网站的内容然后放到自己的网站上，这本身就是非常不正当获取内容的方式，因为这种方法的便捷性成为很多网站更新内容的手段和渠道，这可以看做是行业内部不正当竞争的一种方式。</p><p>再者采集内容的质量难以人为掌控是采集受到抵制的另一个重要原因，现在的很多站长用程序来采集内容，而现有的技术还不能安全过滤文章中不利于网站发展的内容，比如不良画面语句。就算你都是从权威网站上采集内容，其他网站的内容很可能并不适合你网站内容的更新，网站本身的发展是存在差异特征的。</p><p>现在搜索引擎的人性化水准逐步提高，作弊的手段极易遭来搜索引擎的不友好，轻则不收录，重则K站，采集所造成的网站发展后果是完全得不偿失的。不论从哪个方面看，采集内容都不能使网站生存长久，对网站的长久运营也是不可取的，所以不建议大家使用此种方法。</p><br><p>2、伪原创工具</p><p>所谓伪原创就是把一篇文章进行再加工，使其让搜索引擎认为是一篇原创文章，从而提高网站权重。随着seo的发展出现了“伪原创”这个产物，被众多SEOer痴迷不能自拔，到现在还有很多站长在操作站群，少则几百站点多则上千如此庞大的网站阵容如果用原创去更新兼职就是无底洞，采集是最为简洁和方便的方法。</p><p>或许有人会问：“采集来干什么呢？”很简单，当然是获得大量的内容信息，然后自己整合出质量较高的伪原创，对于笔杆子不行的人，这方法可比在那干想好上千万倍。当然能坚持原创固然好，但是因为各种原因做不了也不要胡乱的填充垃圾内容。</p><p>我们知道，搜索引擎是喜欢原创性的内容，对于重复的内容，它会认为没有收录的价值。如果网站上大量的内容都是转载的，搜索引擎就会觉得整个网站没有多大的价值，从而降低网站权重。网站排名自然也不会很高。因为伪原创工具都是机械的、死板的，这些工具无外乎替换词语，比如同义词，甚至有替换成反义词的，这样就和原文的意思完全相反了，没有观点或者错误的观点，对网站长期发展百害无一利。</p><p>同时，这些伪原创工具还有一个“本事”就是打乱文章的段落、句式，使文章看起来前言不搭后语，说难听一点，这样的文章狗屁不通的，只给搜索引擎看。网站的最终目的是做给用户看的，一个网站大量的文章都读不懂，句子不通，你自己看到别人的网站这样子，也一定会马上单击屏幕右上角的红叉叉。今年搜索引擎对内容的重视程度，相信大家也是有目共睹，所以建议大家最好不要在使用这种方法了。</p><br><p><strong>十三：买卖链接</strong></p><p>外部高质量单向链接对网站的推荐作用不用多说，做seo的也都知道，这也是为什么大家总是到处找各种平台发放外链的原因之一，一个好的首页单向链接比那些平台中的链接要好太多太多，很多人通过链接交易平台进行链接买卖，也就是购买的高pr的外部链接或友情链接。这一种作弊手法现在也是很流行的。</p><p>购买链接，虽然在其他网站买广告是很正常的一件事，但有的时候如果所购买的广告链接纯粹为了操纵搜索引擎排名并且一次性购买大量，也会被当做作弊手段。</p><p>虽然这样的连接搜索引擎虽然很少查，但是这样做的人自己心里很清楚。如果你的网站被认为是通过购买链接来作弊，也没办法去和搜索引擎争辩。因为搜索引擎的决定就是最后的决定。但是搜索引擎很难判断哪些链接是正常的哪些链接是购买的，这也是为什么你知道你的对手在买链接，而他的排名却一直比你高的原因。可以这样说现在很多排名在前面的网站都存在买链接的情况，只要到“正规”的地方买，并且合理的利用，我们根本不必当心什么。需要当心的只是那些做网站链接交易的网站，因为搜索引擎是可以发现它们的。</p><br><p><strong>十四：链接工厂(站群，链轮)</strong></p><p>链接工厂，亦称大量链接机制，链接农场，链接养殖场;指由大量网页交叉链接而构成的一个网络系统。这些网页可能来自同一个域或多个不同的域，甚至可能来自不同的服务器。</p><p><font color="#ff4c00">站群结构图</font></p><p>链接工厂简单的理解可以为一个相互链接的一群网站，不顾主题的相关，大家链接在一起，每个新加入的网站既可以得到之前的网站的链接，同时也要链接别人。而之前加入的网站就可以得到多一个链接。由于大量的网页相互交叉链接,而构成了一个链接的网络系统。比如说，现有100个网站，这些网站内容可能不相关，但是彼此互相链接，形成一个网状结构。</p><p>一个站点加入这样一个“链接工厂”后，一方面它可得到来自该系统中所有网页的链接，同时作为交换它需要“奉献”自己的链接，借此方法来提升链接得分，从而达到干预链接得分。其目的是通过搜索引擎获得大量流量，或者是将链接指向同一个网站，以提高搜索排名。站群通常由几个到几百个网站组成，个人站长想通过手工更新站群，那几乎是不可能的任务。所以一般都是通过站群软件来完成。</p><p>其中最为突出的就是<font color="#ff4c00">博客链轮</font>，又称BLOG-LinkWheeler，在SEO中通常用来培养自己关键词在搜索引擎中的排名。当然，在庞大的外部导入链接的支撑下，我们可以利用站内的合理锚文本分布来进行恰当的优化。</p><p>最后博客要提醒一下各位站长，加入链接工厂，危害十分大。是对搜索引擎十分不友好的一种做法，加入链接工厂极有可能让你的站点陷入泥潭，到时候会被搜索引擎降权或者被K掉。而google的算法中也曾明确提到，链接作弊的网站，自己本身也算作弊。</p><br><p><strong>十五：群发软件</strong></p><p>相信很多站长建站初期对网站的推广都是一筹莫展，想把站做好做大，但又耐不住性子，急于想一步登天，恨不得明天网站流量就超过1万，但是现实总是很残酷的。一开始急于收录，好容易收录了又开始着急没流量，想尽了一切办法也没又成功。最后便想到了群发。</p><p>群发是指通过软件或其他方式对受众进行群体式广告发送，随着科技进步，群发指的已不再是单纯意义上的短信群发，它还包括了QQ群发，email群发，博客群发等等，甚至网页群发都已普遍存在。现在很多群发人的目的不是为了seo优化，完全是为了把产品和企业信息展示给用户。当然这种强制性营销尽管受消费者反感，但不得不说带来的效果也是很大的。</p><p>群发软件主要作用为发布推广企业或个人信息。目前群发软件主要有：博客群发软件、邮件群发软件、论坛群发软件、QQ群发软件、企业QQ群发软件、微博群发、微信群发、阿里旺旺群发软件、阿里巴巴群发软件、引擎登陆群发软件、供求信息群发软件、留言板群发软件、短信群发软件、外链群发软件等等。如想了解相关的软件可查看博客的软件下载栏目去了解。</p><br><p>1、博客群发</p><p>博客群发通俗点说就是在各大门户网站批量创建博客，编写软文或者转载主站文章，而各个博客之间又互相友情链接，最终到达提升网站的知名度、增加外链、提高流量等目标。博客群发推广并不是注册一堆博客就完了，这些博客需要“养”，每天都需要更新文章，贵在坚持。好多朋友可能有所误解，以为博客群发推广效 果来得快，和你说吧，刚建立博客效果不会马上突显，需要大量文章的积累和长时间的坚持。</p><br><p>2、论坛群发软件</p><p>可对在线的千万论坛网站直接发送帖子，绕过验证直接发送带链接的图片或文字广告。论坛群发软件迎合了论坛在线人数远大于邮件在线人数且交互及时等特点。比较有效的一种网络推广方式，优点比较省时省力，阅读人数远大于邮件，缺点就是不长久，并且容易被封帖。但是只要平台访问量够大，发的帖子够多，就算存在时间短，带来的访问量也是可观的。</p><br><p>3、微博群发</p><p>微博群发，通常是指的利用现有的微博资源进行评论或通过粉丝积累达到营销目的，今年才出现的微博营销，如今火得一塌糊涂，很多大企业或公司，以及社会有重大影响力的人物都通过微博进行推销。微博群发的一个最大的优势，就是表现亲和零距离，能迅速发布资讯兵被粉丝接受。因此，微博营销将不可避免地成为营销趋势。</p><br><p>4、QQ群发</p><p>QQ作为国内使用最广泛，人群范围最广的即时通讯工具，已经无法离开人们的生活。广告宣传商今年越来越看重QQ在群发营销界，投入大笔经费用于QQ群发广告宣传，而且效果也出奇的好。QQ群发不仅仅能充分利用QQ用户群广泛的，活跃度高的优势，而且群发费用极低，越来越受到中小企业或个人的青睐。</p><br><p>5、邮件群发</p><p>群发邮件是个人或者组织，通过对邮件地址的收集，并且使用邮件群发器，大量发送邮件的过程。发送过程是取得了邮件接受者的许可，将是合法的邮件营销。否则则被视为垃圾邮件。</p><p>以电子邮件为主要的网站推广手段，常用的方法包括电子刊物、会员通讯、专业服务商的电子邮件广告等。基于用户许可的Email营销与滥发邮件（Spam）不同，许可营销比传统的推广方式或未经许可的Email营销更大优势，可以减少广告对用户的滋扰、增加潜定位的准确度、提高品牌忠诚度等。</p><br><p>6、短信群发</p><p>手机短信广告（俗称短信群发）是通过发送短信息的形式将企业产品、服务等信息传递给手机用户，从而达到广告的目的。手机短信广告的宗旨是为企业发展、节约开支、提高效益而产生的，它将“打折信息”“促销活动”“新品发布”等相关信息发布到目标客户的手机上，为企业树立品牌形象或占有市场创造了无限商机，也能为企业大幅降低广告开支。</p><br><p>7、外链群发</p><p>利用脚本或软件工具在网络上各个平台进行大批量的外部链接群发、建立。吸引搜索引擎对该网站的关注及关键词排名、权重的提升。随着现在算法的不断更新，现在外链群发的效果完全不如以前了。当然，现今各大搜索引擎对群发早就有了针对性的检测与评判标准，也会进行处罚，所以不建议大家再使用此方法。并且还要提防别人对你的网站使用。</p><p>当然群发的方式还有很多，就不一一例举了。</p><br><p><strong>十六：蜘蛛陷阱</strong></p><p>蜘蛛陷阱是阻止蜘蛛程序爬行网站的障碍物，通常是那些显示网页的技术方法，目前很多浏览器在设计的时候考虑过这些因素，所以可能网页界面看起来非常正常，但这些蜘蛛陷阱会对蜘蛛程序造成障碍。</p><p>如果消除这些蜘蛛陷阱，可以使蜘蛛程序收录更多的网页。蜘蛛陷阱也是以前常常使用的黑帽方式之一，就是用一些动态网站代码中，写一个无线循环的页面，使得蜘蛛爬进去后在这个无穷循环中轮回收录，这样虽然会使得网站疾速进步排名，但也会随时给我们网站带来k站的影响，所以建议大家最好不要使用。特别是搜索引擎频繁调整算法的时期。</p><p>搜索引擎蜘蛛抓取结构原理</p><p>在此也简单为大家介绍几种易导致蜘蛛陷阱的建站技术：</p><br><p>1、Flash动画</p><p>有得网站喜欢在首页放一个Flash动画片头、用户访问网站看完片头后被转向得真正得HTML版本得文字网站首页。但搜索引擎不能读取Flash、一般也没办法从FlashIntro跟踪到HTML版本页面。如果Flash效果是必需得、至少也需要在首页加上一个通往HTML版本得链接。这个链接应该是在Flash文件之外得HTML代码中、搜索引擎跟踪这个链接可以抓取后面得HTML版本页面。</p><br><p>2、Session ID</p><p>有些网站使用Session ID跟踪用户访问、每个用户访问网站时都会生成独特唯一得SessionID、加在URL中。搜索引擎蜘蛛的每一次访问也会被当成一个新得用户、URL中会加上一个不同得SessionID，这样搜索引擎蜘蛛每次来访问时所得到得同一个页面得URL将不一样、后面带着一个不一样得SessionID。这也是最常见得蜘蛛陷进之一。这样就会产生了同一个页面但URL不同的情况，但这种方法会产生复制内容页面，造成了高度重复的内容页。</p><br><p>3、框架结构</p><p>对搜索引擎来说、方位一个使用框架得网址所专区得HTML只包含其他HTML文件得代码、并不包含任何文字信息、搜索引擎根本无法判断这个网址得内容是什么。虽然蜘蛛可以跟踪框架中所调用得其他HTML文件、但是这些文件经常是不完整得页面、比如没有导航只是正文。搜索引擎也无法判断框架中的页面内容应该数属于主框架、还是属于框架调用文件。</p><br><p>4、动态URL</p><p>动态URL指得是数据库驱动得网址所生成得、带有问号、等号及参数得网址。一般来说动态URL不利于搜索引擎蜘蛛爬行、应该尽量避免。有的url会造成蜘蛛的死循环。</p><br><p>5、JS链接</p><p>由于Javascript可以创造出很多吸引人得视觉效果、有些网址喜欢使用Javascript脚本生成导航系统。这也是比较严重得蜘蛛陷阱之一。虽然搜索引擎都在尝试解析JS脚本、不过我们不能寄希望于搜索引擎自己去克服困难、而要让搜索引擎跟踪爬行链接得工作尽量简单容易。</p><br><p>6、要求登录</p><p>有些网站内容放在需要用户登录之后才能看到得会员区域、这部分内容搜索引擎无法看到。蜘蛛不能填写用户名、密码、也不会注册。</p><br><p>7、强制使用Cookies</p><p>有些网站为了实现某种功能、如记住用户登录信息、跟踪用户访问路径等、强制用户使用Cookies、用户浏览器如果没有启用Cookies、页面显示不正常。搜索引擎蜘蛛就相当于一个禁用Cookies得浏览器、强制使用Cookies只能造成搜索引擎蜘蛛无法正常访问。</p><br><p><strong>十七：虚伪链接</strong></p><p>大家都知道蜘蛛都是依照连接地址去发行的，对于虚假连接蜘蛛是很厌恶的，好比说一个页面，当蜘蛛进去后，里面除了关键词别的内容什么都没有，又比如你是做网上食品店的，你为了吸引人进你的网站，外链锚文本用淘宝啊、最新电影啊等词来吸引人，总而言之，反正链接文不对题带有一定的欺骗性质的都可以说是虚伪链接。</p><p>这样一来蜘蛛也就会被逼迫爬行并且收录，固然蜘蛛无奈辨认你的网站是否是虚假连接，但是搜索引擎一旦发现，你的网站也会被k掉，并且这样做对用户体验非常不好。如果你的网站不是为短期性盈利的网站，完全不必这么做。</p><br><p><strong>十八：欺骗点击链接</strong></p><p>当用户打开一个网站，该网站声称其网站已移至新域名下，并请用户点击新域名链接进入网站。但当用户进去后才发现，这个链接是一个“会员”链接或与原网站毫不相干的网站。这也属欺骗性重定向行为。</p><p>还有一种就是黑客们可以利用“肉鸡”设备诱导用户点击欺骗性链接，进行DNS高速缓存毒害攻击，或是对其他操作系统发起攻击。</p><br><p><strong>十九：弹窗广告</strong></p><p>弹窗广告是在网站中加入弹窗，通过采用标签或者Javascript实现，指打开网站后自动弹出的广告，无论点击还是不点击都会出现在用户的面前。</p><p>不管是导出到外部网站还是内部链接，对搜索引擎而言都是不友好的，有网站的朋友应该都知道，给客户做短期广告时候就加入了弹窗，由于种种原因，关键词排名会掉好多页，所以建议各位站长，如果你的是新站，尤其是PR、权重比较低的站，一定要注意，千万别做弹窗。</p><br><p>拒绝弹窗广告</p><p>目前采用弹窗广告的在游戏行业中主要体现在web游戏上面，从追求流量的角度讲，MP3弹窗是目前利用最多的。曾经论坛回帖中利用过，后来转嫁到博客中，09年的时候新浪博文中加载mp3弹窗也算是比较流行的。</p><p>一般弹窗广告之中都具有强制性，并且可能包含挂马病毒，木马病毒。用户一般都对这种强迫式的广告形式很厌恶，而且现在大多数浏览器会提供一些插件来屏蔽弹出广告。</p><p>弹窗广告对百度SEO优化是一个致命的伤害，同时也看得出对用户体验不够友好。如果大家对自己的网站想往正规站发展做大做强就不要图眼前的利益，也去做做弹窗广告害了自己的网站。</p><p>如果网站要长期的发展，就要细微之处见真情，如果打开一个网站，弹窗网页漫天飞，让你第一印象就是垃圾站一个，那么你留住的用户群就少的可怜了，更不用说你的流量了，没有了固定的访问群，你的流量也就是引擎收录的那些了，不利于网站的发展。并且现在百度对弹窗之类也表现得比较反感，比如今年推出的石榴算法。</p><br><p><strong>二十：刷站</strong></p><p><font color="#ff4c00">1、刷百度排名</font></p><p>最近这段时间各大站长讨论平台随处可见各种类似的广告，一种叫做“快速刷百度排名”的广告很是泛滥。如“三天排名进前三”、“24小时关键词上首页”、“6小时进百度首页”、“8小时前三”、“无需更新文章，动动鼠标就能排名”等的服务，根据百度指数收费几百到几千不等。目前刷百度排名的主要方式可以说是两大类，一个就是手工刷，一个则是软件刷。</p><br><p><font color="blue">1、刷百度排名</font>的原理：一个基于用户点击的原理，百度认为质量高的网站必然是用户最喜欢点击的网站，搜索一个关键词，一个网站点击的次数越多，说明这个网站是更受用户欢迎的。</p><p>通过不同的ip使用百度查询某一关键词，点击你要刷的网站，当一个网站点击的次数越多，那么百度就会认为这个网站是对用户最有帮助的网站，会在短时间内将其排名提前。从而通过欺骗百度的方式刷排名。刷百度排名的核心技术就是模仿大量真实IP搜索某个关键词并直接点击目标网站，一般是通过adsl换ip或者是换代理ip的方式刷排名。</p><br><p>百度又是如何判断刷排名作弊的呢？</p><p>（1）、搜索和地域不相干的词。比如广东的Ip搜索“上海SEO公司”，那就肯定有问题了。并且对于地域类词语，不同区域搜索出的结果也不一样，也会造成刷排名是没法刷的。</p><p>（2）、Ip过多集中在同一区域或者是同一ip段。如果是用adsl拨号换ip的话，尽管ip能切换成不同的ip，但是始终都是在同一ip段内，并且ip所在地是不变的。如果点击某网站的ip过多集中在同一区域，也很有可能触发百度的人工审核。</p><p>（3）、不点击排名在前面的网站，而直接点击某一特定排名的网站。由于是刷排名，软件一般会通过定位或者是查找的方式，直接跳转到某一页中，点击某个特定的网站。这就和普通用户的浏览习惯方式大相径庭了。一般很少有人会不点击前面的网站链接，而直接跳过去点击排名稍靠后的网站，因此这也很有可能被百度发现。</p><br><p>2、刷百度下拉框(相关搜索)</p><p>百度下拉的官方正式叫法是百度推荐词(Baidu SuggestWord)，民间又称之为百度联想词或百度下拉菜单。是百度为了方便广大网民搜索，提高输入效率而推出的一项服务。</p><p>百度下拉的作用：大部分人在搜索某一个关键词的时候，其实他并不知道该如何组织语言以便更加精确的达到搜索目的，下拉框就为他提供了便捷。如果搜索词比较长的话、这样子也节约了时间，所以下拉框是很便捷的。</p><p>制造虚假搜索是由于百度、google都提供了相关关键字的功能，于是有人就自己发明一些与热门关键字相关的关键字，比如说“土豆网”热门，他就发明一个“挖土豆”的关键词，预先自己先建立好相应的页面，通过搜索这个新的关键词能排到第一。然后通过软件在搜索引擎里不断地搜索这个关键字，于是这个关键词就出现在了相关搜索的位置，吸引用户点击搜索。</p><p>相关搜索是搜索引擎用户体验的一个部分。刷一些自造生僻的关键词出来,影响用户体验，明白人一看就知道是刷出来的，如果刷新量太高，百度人工核查时被发现，将会封锁关键字，重者K站。</p><br><p>3、刷百度分享</p><p>通过百度分享按钮，您网站上的网页将更容易被百度搜索引擎所发现，从而有机会从百度搜索带回更多的流量。可以在搜索结果中，出现百度大拇指，就算排名不在第一，也会引导用户注意您的网站。</p><p>百度分享的官方说法：</p><p>（1）、用户将网站内容分享到第三方网站，第三方网站的用户点击专有的分享链接，从第三方网站带来社会化流量。</p><p>（2）、使用了百度分享的网页可以更快地被百度爬虫发现，从而帮助网站的内容更快地被百度抓取。</p><p>（3）、使用了百度分享的网页被用户分享后，可以使该网页被分享的次数展示在百度的搜索结果页中，辅助用户判断网页质量。</p><p>搜索引擎本身的运营指导方针就是不断的提高SEO的质量，提供访客更具价值的信息，并且它希望所有的站点都可以遵循其制定的游戏规则走。作为国内最大的搜索引擎百度推出这一分享工具的初衷是为了提供给他们可以一个更加有价值的搜索结果。我们假设其对我们的排名有一定的作用，而你采用刷的方法来提供这一数值，这种行为无异于购买链接，如果你的站点采用此种做法，将有可能面临搜索引擎的惩罚。</p><p>如果只是单纯的分享，造成网站的跳出率高，这样的分享应该算是做弊，因为软件刷都是自动定时换IP进入网站分享之后关闭页面，所以不仅造成PV过低而且跳出率很高。因为半夜12点-早上8点的时间段自然IP很少，但软件刷分享的IP很多，造成了每天早上一打开统计，看到网站的跳出率都在90%以上。使用不正规的手段来刷高百度分享小拇指的分享次数可以说弊大于利，而对于一个站点如果你想要累积你的用户群，站在用户的角度来建设站点才是真正的成功之道，切勿使用这些旁门左道来投机取巧。</p><br><p>4、刷网站流量</p><p>通常说网站流量是指网站的访问量，是用来描述访问一个网站的用户数量以及用户所浏览的页面数量等指标，常用的统计指标包括网站的独立用户数量、总用户数量(含重复访问者)、页面浏览数量、每个用户的页面浏览数量、用户在网站的平均停留时间等。</p><p>刷网站流量(alexa流量和IP流量)对网站排名的危害</p><p>(1)、流量大起大落存作弊嫌疑</p><p>由于平台刷流量的速度是非常快的，一天的IP量就有上万，一个网站流量每天上百就已经是很不错的网站了，一个新站流量突然间由原来的一天不到10个增加到一天上万，其作弊嫌疑相当明显。</p><p>(2)、重复IP严重引起注意</p><p>由于同一个刷IP平台的用户也就几千个人，长久互刷IP重复严重，很容易引起搜索引擎和alexa的注意。</p><p>(3)、页面浏览时间太短</p><p>由于使用软件平台刷IP，软件打开页面以后就要立即关闭，否则浏览器无法承受同时打开太多的页面，所以页面浏览时间是很短的，而且即便是真的是网民自然浏览的话，一个网站浏览的时间过短也从一个侧面证明该网站可读性不强，用户体验不好，不能留住客户。</p><p>(4)、流量不均匀</p><p>尤其对一个新网站，刚开始的时候没有流量，一天每个时间段内IP访问量几乎是零。当你打开软件刷流量的时候，IP访问量瞬间增加到几十，几百甚至上万，严重的IP访问不均匀，被搜索引擎和alexa降权也是情理之中了。</p><p>(5)、外链和流量严重不平衡</p><p>一般情况下，一个新网站在几乎没有高质量外链的前提下，流量上千甚至上万，即便是一个网站高手都不能够做到，更何况一个新的草根站长。想要骗过搜索引擎和alexa这样的专业团队就更是痴人说梦了。当然这个说法也是比较极端的。如果是合理的刷流量也不会带来搜索引擎的惩罚，对网站排名确实有一定好处，不过这仅仅是为了seo而seo，网站带来的流量都是子虚乌有，不过等你排名上去了，同样是可以获得更多有效流量，这和购买链接是一个意思。</p><br><p><font color="blue">SEO小结：</font></p><p>要想做好白帽SEO就必须要先了解黑帽SEO都包括了哪些手法，避免无意中就使用了黑帽SEO手法。有些黑帽SEO手法风险更大，近乎杀无赦。只要被发现网站一定会被惩罚或者删除。</p><p>有的黑帽手法风险要低一点，搜索引擎还会考虑网站的其它因素，惩罚比较轻微，也有恢复的可能。所以有些人呢会合理的利用黑帽SEO，或从黑帽SEO中学习新的优化方法，希望大家也能够发散思维、活学活用，始终以提升网站质量和用户体验为最终目标。</p><p><font color="red">最后再次友情提醒：</font></p><p>虽说黑帽SEO你觉得这么快啊，但白帽SEO才是正途。对一个正常的商业网站和大部分个人网站来说，做好内容，正常优化，关注用户体验，才是该做的。做人做事有底线，不该赚的钱不赚。</p><p><strong>附：黑客入门常用词汇解释</strong>（白杨SEO标颜色重点看看~）</p><p><strong>社工</strong>：社会工程学一种通过对受害者心理弱点、本能反应、好奇心、信任、贪婪等心理陷阱进行诸如欺骗、伤害等危害手段。</p><p>黑客入门常用术语</p><p><strong>单反</strong>：社工术语一个好友辅助申诉</p><p><strong>裸奔</strong>：社工术语不需要好友辅助申诉</p><p><strong>肉鸡</strong>：肉鸡也称傀儡机，是指可以被黑客远程控制的机器</p><p><strong>人肉</strong>：<font color="blue">人肉，一般是指人肉搜索，通过匿名知情人提供数据的方式搜集信息</font></p><p><strong>谷歌黑客</strong>：Google hacking使用搜索引擎，比如谷歌来定位因特网上的安全隐患和易攻击点</p><p><strong>SQL注入</strong>：通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令</p><p><strong>弱口令</strong>：弱口令指的是仅包含简单数字和字母的口令，例如”123”、”abc”等，因为这样的口令很容易被别人破解。白杨SEO提醒：所以你的站，或者你去第三方注册密码不要设置太简单啦~</p><p><strong>DDOS</strong>：<font color="blue">DDOS全名是分布式拒绝服务</font>,很多DOS攻击源一起攻击某台服务器就组成了DDOS攻击通过很多“僵尸主机”向受害主机发送大量看似合法的网络包，从而造成网络阻塞或服务器资源耗尽而导致拒绝服务</p><p><strong>cc攻击</strong>：攻击者控制某些主机不停地发大量数据包给对方服务器造成服务器资源耗尽</p><p><strong>webshell</strong>:在网站后台插入一个后门可以随意篡改主页</p><p><strong>提权</strong>：<font color="blue">提权是黑客的专业名词，一般用于网站入侵和系统入侵</font></p><p>跳板：利用跳板入侵其他的电脑从而入侵网站等从事非法操作不会被抓</p><p>注入点：可以实行注入的地方</p><p>影子系统:创建一个和真实操作系统一模一样的虚拟化影像系统。进入影子系统后，所有操作都是虚拟的，所有的病毒和流氓软件都无法感染真正的操作系统。系统出现问题了，或者上网产生垃圾文件，只需轻松的重启电脑，一切又恢复最佳状态。</p><p>虚拟机：虚拟机是指可以像真实机器一样运行程序的计算机的软件实现</p><p><strong>VPN</strong>：可以访问Youtube，Twitter，Facebook等国内进不去的网站</p><p><strong>IP</strong>:人们为了通信的方便给每一台计算机都事先分配一个类似我们日常生活中的电话号码一样的标识地址，该标识地址就是IP地址。</p><p><strong>局域网</strong>：局域网(Local Area Network)是在一个局部的地理范围内(如一个学校、工厂和机关内)</p><p><strong>暗网</strong>：<font color="blue">又称深网，是指互联网上的内容，不属于网络的表面</font></p><p>旁注：旁注是最近网络上比较流行的一种入侵方法，在字面上解释就是-“从旁注入”，利用同一主机上面不同网站的漏洞得到webshell</p><p><strong>远控</strong>：是在网络上由一台电脑远距离去控制另一台电脑的技术</p><p><strong>域名</strong>：是由一串用点分隔的名字组成的Internet上某一台计算机或计算机组的名称</p><p><strong>用户名</strong>：英文名:Username，是网络术语之一。就是要登陆(登入、登录、进入等)的帐户名</p><p><strong>password</strong>：英文单词password的意思为：密码</p><p><strong>pe盘</strong>：u盘做系统是指把普通的U盘制作成可以引导的PE盘来代替光驱进行计算机操作系统安装的过程</p><p><strong>DOS命令</strong>：DOS命令，是DOS操作系统的命令，是一种面向磁盘的操作命令</p><p><strong>代理ip</strong>：我们知道这些代理服务器的地址，就可以利用它到达国外网站。</p><p><strong>MD5</strong>：一种加密算法</p><p><strong>社工库</strong>：帮助您判断您的密码或个人信息是否已经被公开或泄漏</p><p><strong>源码</strong>：源码就是指编写的最原始程序的代码</p><p>whois：whois是用来查询域名的IP以及所有者等信息的传输协议</p><p><strong>XSS</strong>：跨站脚本攻击。它指的是恶意攻击者往Web页面里插入恶意html代码，当用户浏览该页之时，嵌入其中Web里面的html代码会被执行</p><p>免杀：一种能使病毒木马避免被杀毒软件查杀的技术</p><p><strong>拖库</strong>：来指网站遭到入侵后，黑客窃取其数据库。我们经常听到说某某站被拖库了，不是脱裤了哦~</p><p>抓鸡：“抓鸡”是黑客界的一种流行语言.这里所说的”鸡”,是指”电脑肉鸡”。</p><div align="right">本文转载自公众号 ： 白杨SEO优化教程</div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;font color=&quot;red&quot;&gt;友情提醒&lt;/font&gt;：以下文章来源网络，部分白杨SEO说明。同时，这些黑帽SEO方法知道就行，最好不要去操作。&lt;font color=&quot;blue&quot;&gt;做人做事有底线，眼光要看长远。&lt;/font&gt;某天说自己站被K了，可能并不是无辜的~&lt;/p
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>程序员的生活原来是这么的扎心！</title>
    <link href="https://rohlin2019.github.io/rohlin.github.io/2019/07/04/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E7%94%9F%E6%B4%BB%E5%8E%9F%E6%9D%A5%E6%98%AF%E8%BF%99%E4%B9%88%E7%9A%84%E6%89%8E%E5%BF%83%EF%BC%81/"/>
    <id>https://rohlin2019.github.io/rohlin.github.io/2019/07/04/程序员的生活原来是这么的扎心！/</id>
    <published>2019-07-04T03:00:58.000Z</published>
    <updated>2019-08-02T03:02:33.193Z</updated>
    
    <content type="html"><![CDATA[<p>每天坐在电脑旁忙着项目的功能开发，bug修复，东沟通西沟通，围绕的都是一行行代码。甚至在上下班路上都还在想着逻辑该怎么样，方法该怎么去写，要调用哪个方法。或者到了测试环节，测试那边有问题，我这里开发的没问题呀，可能是缓存问题，清一下缓存就好了……</p><p>就像什么节假日呀，什么周末大小周、双休呀，跟程序员关系不大，因为程序员80%都在加班，剩下的两个10%分别可能是是陪女友和陪基友打游戏。程序员的工作相对比较忙，除了自己圈子以外，闲暇时间比较少，很少有时间到外面各种场合去晃去玩。</p><p>大多数程序员的圈子可能比较窄，这个跟工作性质是有密切关系的，多数程序员待在公司办公的时间比较多，占日常生活时间的80%，经常和内部人员交往，普通程序员的工作就是一自我为中心给你什么样的工作完成就好，当然如果做到了管理层那就另当别论了，其次大部分程序员一般都是宅男宅女的存在性格比较内向不愿与人接触也是一个原因所在。就是因为这种种原因造就了程序员的交友圈子变窄，当然，这只是大多数，一部分程序员交友圈子还是很广阔的！</p><p>程序员会给人带来一种木讷老实的感觉，其实木讷老实是一些喜欢给人贴标签给贴的，程序员是个高智商的群体，觉大部分人都是受过高等教育的，情商也不低。就像小鸿可能和90后不善于沟通一样，但绝对不是呆头呆脑的哈！</p><p><strong>在程序员的生活中，经常会出现这样的梗</strong></p><p>妈：儿子你做什么工作？</p><p>我：我在微软工作，是名软件工程师。</p><p>爸：完美，去把家里的电脑给修了！</p><p>我：……<br><img src="https://www.xvue.cn/blog/article_imgs/2a28535a13acaf884bbbfb5b84b132b.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><p>目前大家对程序员的印象可能就是：</p><p>木讷、内向、沉闷、拖沓、不懂浪漫、不善于交际、屌丝、苦逼、裤衩、拖鞋、修电脑的…，实际上，程序员10%的时间在想着如何改变世界，剩下的90%都在调bug….</p><p>请问你躺枪了吗！如果还没有提及到的真相，欢迎来小鸿这边留言！（我感觉写完这篇文章就不敢出门了，怕被同胞打o(╥﹏╥)o）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;每天坐在电脑旁忙着项目的功能开发，bug修复，东沟通西沟通，围绕的都是一行行代码。甚至在上下班路上都还在想着逻辑该怎么样，方法该怎么去写，要调用哪个方法。或者到了测试环节，测试那边有问题，我这里开发的没问题呀，可能是缓存问题，清一下缓存就好了……&lt;/p&gt;
&lt;p&gt;就像什么节假
      
    
    </summary>
    
    
      <category term="程序员资讯" scheme="https://rohlin2019.github.io/rohlin.github.io/tags/%E7%A8%8B%E5%BA%8F%E5%91%98%E8%B5%84%E8%AE%AF/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript异步和等待的介绍</title>
    <link href="https://rohlin2019.github.io/rohlin.github.io/2019/07/03/JavaScript%E5%BC%82%E6%AD%A5%E5%92%8C%E7%AD%89%E5%BE%85%E7%9A%84%E4%BB%8B%E7%BB%8D/"/>
    <id>https://rohlin2019.github.io/rohlin.github.io/2019/07/03/JavaScript异步和等待的介绍/</id>
    <published>2019-07-03T02:51:02.000Z</published>
    <updated>2019-08-02T03:00:34.806Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.xvue.cn/blog/article_imgs/6d35e333e5b57ffbb6fca81f6516b97.png" alt="photo" title="关注微信公众号，程序员小鸿"><br>&emsp;&emsp;JavaScript 从未如此简单，在最近的一段时间里，我们使用了回调、异步，当然还有异步功能。<br>&emsp;&emsp;异步函数使得编写异步 JavaScript 变得更容易，可是对于初学者来说会有一些困难。在这里分享一下有关异步函数的基本内容……</p><h4 id="异步功能"><a href="#异步功能" class="headerlink" title="异步功能"></a>异步功能</h4><p>异步函数包含 async 关键字，可以在正常的函数声明中使用它：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">functionName</span> (<span class="params">arguments</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 做一些异步的事情</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你也可以在箭头函数中使用它：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> functionName = <span class="keyword">async</span> (<span class="built_in">arguments</span>) =&gt; &#123;</span><br><span class="line">    <span class="comment">// 做一些异步的事情</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br>#### 异步函数总是返回 promise在这里你 return 什么并不重要，因为返回的值始终是一个 promise<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getOne = <span class="keyword">async</span> _ =&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> promise = getOne()</span><br><span class="line"><span class="built_in">console</span>.log(promise)</span><br></pre></td></tr></table></figure><p><font color="red">注意</font>：继续之前，你应该知道什么是 JavaScript Promise 以及如何使用他们。<br><br></p><h4 id="await-关键字"><a href="#await-关键字" class="headerlink" title="await 关键字"></a>await 关键字</h4><p>当你调用一个promise时，你会在 then 调用中处理下一步：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getOne = <span class="keyword">async</span> _ =&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getOne().then(<span class="function"><span class="params">value</span> =&gt;</span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(value)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>await 关键字允许你等待乘诺解析，一旦解析了 promise，就会返回传递给 then 调用的参数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> test = <span class="keyword">async</span> _ =&gt;&#123;</span><br><span class="line">  <span class="keyword">const</span> one = <span class="keyword">await</span> getOne()</span><br><span class="line">  <span class="built_in">console</span>.log(one) <span class="comment">// 1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test()</span><br></pre></td></tr></table></figure><br>#### 等待返回在返回承诺之前没有必要等待，可以直接退回承诺。在这里如果你有 return await，你得先解决乘诺，然后再创建一个新的乘诺，return await 实际上什么也没做……<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 不需要这样做</span></span><br><span class="line"><span class="keyword">const</span> test = <span class="keyword">async</span> _ =&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> getOne()</span><br><span class="line">&#125;</span><br><span class="line">test().then(<span class="function"><span class="params">value</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value) <span class="comment">// 1</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这样做</span></span><br><span class="line"><span class="keyword">const</span> test = <span class="keyword">async</span> _ =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> getOne()</span><br><span class="line">&#125;</span><br><span class="line">test().then(<span class="function"><span class="params">value</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value) <span class="comment">// 1</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><font color="red">注意</font>：如果你不需要 await，也就不需要使用异步的功能。上面的例子可改写成</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这样做</span></span><br><span class="line"><span class="keyword">const</span> test = <span class="function"><span class="params">_</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> getOne()</span><br><span class="line">&#125;</span><br><span class="line">test().then(<span class="function"><span class="params">value</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(value) <span class="comment">// 1</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><br>#### 错误处理如果一个 promise 会导致错误，可以通过 catch 调用来处理：<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> getOne = <span class="keyword">async</span> (success = <span class="literal">true</span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span>(success) <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">  <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'Failure!'</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getOne(<span class="literal">false</span>).catch(<span class="function"><span class="params">error</span> =&gt;</span> <span class="built_in">console</span>.log(error)) <span class="comment">// 失败</span></span><br></pre></td></tr></table></figure><p>如果要在异步函数中处理错误，则需要使用 try/catch 调用：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> test = <span class="keyword">async</span> _ =&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> one = <span class="keyword">await</span> getOne(<span class="literal">false</span>)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error) <span class="comment">// 失败</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test()</span><br></pre></td></tr></table></figure><p>如果你有多个 await 关键字，错误处理可能变得丑陋……</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> test = <span class="keyword">async</span> _ =&gt; &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> one = <span class="keyword">await</span> getOne(<span class="literal">false</span>)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error) <span class="comment">// 失败</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> two = <span class="keyword">await</span> getTwo(<span class="literal">false</span>)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error) <span class="comment">// 失败</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> three = <span class="keyword">await</span> getThree(<span class="literal">false</span>)</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(error) <span class="comment">// 失败</span></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test()</span><br></pre></td></tr></table></figure><p>当然这样的方式是不友好的，我们有更好的处理方式<br>我们知道异步函数总是返回一个promise，当我们调用promise 时，我们可以处理 catch 调用中的错误。这意味着我们可以通过添加 .catch 来处理异步函数中的任何错误：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> test = <span class="keyword">async</span> _ =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> one = <span class="keyword">await</span> getOne(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> two = <span class="keyword">await</span> getTwo(<span class="literal">false</span>)</span><br><span class="line">  <span class="keyword">const</span> three = <span class="keyword">await</span> getThree(<span class="literal">false</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">test().catch(<span class="function"><span class="params">error</span> =&gt;</span> <span class="built_in">console</span>.log(error))</span><br><span class="line"></span><br><span class="line">test()</span><br></pre></td></tr></table></figure><p><font color="red">注意</font>：Promise catch 方法仅允许捕获一个错误<br><br></p><h4 id="多个等待"><a href="#多个等待" class="headerlink" title="多个等待"></a>多个等待</h4><p>await 阻止 JavaScript 执行下一行代码，直到 promise 解析为止。这可能会导致代码执行速度减慢的意外后果。为了显示这一点，我们需要在解决 promise 之前创建一个延迟，我们可以使用 sleep 函数创建延迟：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> sleep = <span class="function"><span class="params">ms</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span> (<span class="function"><span class="params">resolve</span> =&gt;</span> setTimeout (resolve,ms))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ms 是解析前等待的毫秒数，如果你传递 1000 进入 sleep，JavaScript 将等待 1s 才能解析await</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用 sleep</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'Now'</span>)</span><br><span class="line">sleep(<span class="number">1000</span>).then(<span class="function"><span class="params">v</span> =&gt;</span> &#123; <span class="built_in">console</span>.log(<span class="string">'After one second'</span>) &#125;)</span><br></pre></td></tr></table></figure><p><strong>这就是需要了解的基本异步功能，希望对你有帮助。</strong></p><div align="right">文章转载自公众号：前端小蒋</div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://www.xvue.cn/blog/article_imgs/6d35e333e5b57ffbb6fca81f6516b97.png&quot; alt=&quot;photo&quot; title=&quot;关注微信公众号，程序员小鸿&quot;&gt;&lt;br&gt;&amp;emsp;&amp;emsp;Ja
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://rohlin2019.github.io/rohlin.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>前端和后端的区别？</title>
    <link href="https://rohlin2019.github.io/rohlin.github.io/2019/07/02/%E5%89%8D%E7%AB%AF%E5%92%8C%E5%90%8E%E7%AB%AF%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F/"/>
    <id>https://rohlin2019.github.io/rohlin.github.io/2019/07/02/前端和后端的区别？/</id>
    <published>2019-07-02T02:47:19.000Z</published>
    <updated>2019-08-02T03:00:21.434Z</updated>
    
    <content type="html"><![CDATA[<p>有的人认为，前端很好学，后端不好学。<br>也有的人认为，前端不好学，后端好学，归根到底还得看个人兴趣。<br><br></p><h3 id="前端和后端做简单的叙述"><a href="#前端和后端做简单的叙述" class="headerlink" title="前端和后端做简单的叙述"></a>前端和后端做简单的叙述</h3><p>后端：入门难，深入更难，枯燥乏味，没有太大成就感，看一堆业务逻辑代码。<br>前端：入门简单，先易后难，能看到自己做出来的展示界面，有成就感。<br><br></p><h3 id="前端和后端两者工作的内容和负责的东西是完全的不同"><a href="#前端和后端两者工作的内容和负责的东西是完全的不同" class="headerlink" title="前端和后端两者工作的内容和负责的东西是完全的不同"></a>前端和后端两者工作的内容和负责的东西是完全的不同</h3><h4 id="1-展示的方式不同"><a href="#1-展示的方式不同" class="headerlink" title="1.展示的方式不同"></a>1.展示的方式不同</h4><p>前端指的是用户可见的界面，网站前端页面也就是网页的页面开发，比如网页上的特效、布局、图片、视频，音频等内容。前端的工作内容就是将美工设计的效果图的设计成浏览器可以运行的网页，并配合后端做网页的数据显示和交互等可视方面的工作内容。<br><img src="https://www.xvue.cn/blog/article_imgs/c22599b49e95914ff0b07762b8c4719.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><p>后端是指用户看不见的东西，通常是与前端工程师进行数据交互及网站数据的保存和读取，相对来说后端涉及到的逻辑代码比前端要多的多，后端考虑的是底层业务逻辑的实现，平台的稳定性与性能等。<br><img src="https://www.xvue.cn/blog/article_imgs/0c4c1a75b9ae83ec9a181b5cc5413fe.png" alt="photo" title="关注微信公众号，程序员小鸿"><br><br></p><h4 id="1-所用的技术不同"><a href="#1-所用的技术不同" class="headerlink" title="1.所用的技术不同"></a>1.所用的技术不同</h4><p>前端开发用到的技术包括但不限于html5、css3、javascript、jquery、Bootstrap、Node.js 、Webpack，AngularJs，ReactJs，VueJs等技术。</p><p>后端开发 以java为例 主要用到的 是包括但不限于Struts spring springmvc Hibernate Http协议 Servlet Tomcat服务器等技术。</p><p>比如做一个登陆页面，用户在前端页面上输入了账号密码，然后用鼠标点击了登陆按钮，这时候前端会将账号密码通过请求接口发送给后端做处理，后端收到数据会先检查此账号是否存在，如果不存在，则返回给前端一条类似于这样的信息：“你输入的账号不存在，请重新输入”，用户再次重新输入账号，此时后端查询账户存在，密码也正确，则后端返回登陆成功的信息给前端。现代计算机领域的难题如大规模负载，海量数据处理，实时计算也是后端的，前端集中在表示层。<br><img src="https://www.xvue.cn/blog/article_imgs/50c5516a0cd450c7f9b4708df211cca.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><p>想学好任何一门技术，还要看自己对这门技术的感兴趣程度，老弟因为高考结束了，完美拿下620分，全广东省专本科排名3923名，当我听到我弟说他要学计算机时，我那一刹就安静了几秒钟，好好的保住头发不好吗，哈哈隔~  因为他自己也选择了计算机专业，我这边给他最多的就是建议，让他自己去选择自己的人生，谁也无法干预。所以我只是想说，从教育学的角度来讲“没有学不会的知识，只有不想学知识的人”，如果在对自己感兴趣的专业方面多下功夫，终是能学会。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;有的人认为，前端很好学，后端不好学。&lt;br&gt;也有的人认为，前端不好学，后端好学，归根到底还得看个人兴趣。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;前端和后端做简单的叙述&quot;&gt;&lt;a href=&quot;#前端和后端做简单的叙述&quot; class=&quot;headerlink&quot; title=&quot;前端
      
    
    </summary>
    
    
      <category term="前端/后端" scheme="https://rohlin2019.github.io/rohlin.github.io/tags/%E5%89%8D%E7%AB%AF-%E5%90%8E%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>我辞职了，理由竟然是………</title>
    <link href="https://rohlin2019.github.io/rohlin.github.io/2019/07/01/%E6%88%91%E8%BE%9E%E8%81%8C%E4%BA%86%EF%BC%8C%E7%90%86%E7%94%B1%E7%AB%9F%E7%84%B6%E6%98%AF%E2%80%A6%E2%80%A6%E2%80%A6/"/>
    <id>https://rohlin2019.github.io/rohlin.github.io/2019/07/01/我辞职了，理由竟然是………/</id>
    <published>2019-07-01T02:40:27.000Z</published>
    <updated>2019-08-02T02:45:12.057Z</updated>
    
    <content type="html"><![CDATA[<p>我：老板，我要离职。。。<br>老板：你为什么要离职？<br>我：我..</p><p>说到离职，对于程序员来讲会有很多种情况，我们来分析下几种情况</p><h3 id="薪资待遇"><a href="#薪资待遇" class="headerlink" title="薪资待遇"></a>薪资待遇</h3><p>在我们工作一段时间后，可能会对目前的薪资待遇不满意，这个时候可以跟老板申请加薪，程序员和老板谈薪资时，大多数程序员是几句话就单刀直入的，对薪资不满意，要求加薪，如果老板同意了，那就说明公司这个时候还是需要你的。这种离职原因还是目前最常见的。<br><img src="https://www.xvue.cn/blog/article_imgs/2de1a80271fbdb28b6ea443ee0c0606.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><h3 id="经常性加班"><a href="#经常性加班" class="headerlink" title="经常性加班"></a>经常性加班</h3><p>当赶项目进度，天天加班，在没有加班费的情况下，就没有加班的意愿了，或者项目上线时，反复出现bug是件很头疼的事情，这也导致了晚上加班，甚至会出现通宵的情况，这样子反复下去程序员身体肯定吃不消的，时间久了难免不会出现地中海（秃头）以及其它疾病，前天小鸿就体会到了加班的痛苦/(ㄒoㄒ)/~~<br><img src="https://www.xvue.cn/blog/article_imgs/b10d34d1029525e8a8cf9d78e1526e2.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><h3 id="不通情达理的Leader"><a href="#不通情达理的Leader" class="headerlink" title="不通情达理的Leader"></a>不通情达理的Leader</h3><p>员工离职，也有可能跟公司的管理制度有关，倘若在一个不通情达理、不专业、不称职、只会阿谀奉承的 Leader 领导下，很多程序员都会有工作到绝望、和产品相互残杀到天昏地暗的悲惨结局。<br><img src="https://www.xvue.cn/blog/article_imgs/4b4f4c3e6fa0783c22aa185c4d2d441.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><h3 id="三年如一日的技术"><a href="#三年如一日的技术" class="headerlink" title="三年如一日的技术"></a>三年如一日的技术</h3><p>工作了三年如一日的技术，日复一日，年复一年，每天都做着同样的事情，已经没有了上升的空间，犹如死水一般，这个时候可以选择往高处走。<br><img src="https://www.xvue.cn/blog/article_imgs/a3ec6dbaba3b71c92dc2227486ea070.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><h3 id="高龄转行"><a href="#高龄转行" class="headerlink" title="高龄转行"></a>高龄转行</h3><p>对于高龄的程序员，一般在30-35岁时就该转行了，相对于年轻程序员的优势在于年轻和激情，大龄程序员的优势在于阅历和经验。所以大龄程序员是可以往更高层面进行发展的。<br><img src="https://www.xvue.cn/blog/article_imgs/278f1d7140bad05487e8e7b16ef3bbf.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><h3 id="单身久了"><a href="#单身久了" class="headerlink" title="单身久了"></a>单身久了</h3><p>这招就比较狠了，公司一个妹子都没有了，不管老板给再高的薪资都很难能留住正处于单身的你哈哈隔~<br><img src="https://www.xvue.cn/blog/article_imgs/9f3f0ce501a1fd0f21eac96e70f84eb.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><p>以上几条是否有你离职时候的影子？或是作为程序员的你，离职的理由会是什么呢？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我：老板，我要离职。。。&lt;br&gt;老板：你为什么要离职？&lt;br&gt;我：我..&lt;/p&gt;
&lt;p&gt;说到离职，对于程序员来讲会有很多种情况，我们来分析下几种情况&lt;/p&gt;
&lt;h3 id=&quot;薪资待遇&quot;&gt;&lt;a href=&quot;#薪资待遇&quot; class=&quot;headerlink&quot; title=&quot;薪资
      
    
    </summary>
    
    
      <category term="互联网资讯" scheme="https://rohlin2019.github.io/rohlin.github.io/tags/%E4%BA%92%E8%81%94%E7%BD%91%E8%B5%84%E8%AE%AF/"/>
    
  </entry>
  
  <entry>
    <title>关于我</title>
    <link href="https://rohlin2019.github.io/rohlin.github.io/2019/06/30/%E5%85%B3%E4%BA%8E%E6%88%91/"/>
    <id>https://rohlin2019.github.io/rohlin.github.io/2019/06/30/关于我/</id>
    <published>2019-06-30T02:30:06.000Z</published>
    <updated>2019-08-02T02:39:46.698Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.xvue.cn/blog/article_imgs/bed88508e01c9b44c3db0cc74c687b4.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><blockquote><p>纵使来路坎坷，前路曲折，也不要失去一往如前的勇气。   –Rohlin 罗林《小鸿》</p></blockquote><p><strong>关于公众号</strong><br>自开通公众号以来一直想把它运营起来，长时间没有运营是因为小鸿没有太多的时间去搞这东西，有部分原因是觉得自己写作的能力和水平都存在不足，不足以支撑这个想法变成现实，现在慢慢的，我的公众号文章也会开始学习数据采集。</p><p>本公众号小鸿还是打算继续运营下去，因为小鸿的理想是想成为一名真正的自由工作者，不再给公司打工。通过此公众号分享作者原创的技术文章以及日常工作和学习中读过的好文，希望能给读者们带来意想不到的收获，也希望能在分享学习成长路上认识更多的伙伴！</p><p><strong>关于小鸿</strong><br><a href="http://localhost:4000/rohlin.github.io/2019/06/13/%E6%88%91%E7%9A%84%E4%B8%80%E5%B9%B4%E9%9B%B6%E5%85%AD%E4%B8%AA%E6%9C%88%E7%A8%8B%E5%BA%8F%E7%94%9F%E6%B6%AF%EF%BC%9A%E5%BC%80%E6%8C%82%E4%BA%BA%E7%94%9F/" target="_blank" rel="noopener">我的一年零六个月程序生涯：开挂人生</a></p><p><strong>联系小鸿</strong></p><div align="center"><img src="https://www.xvue.cn/blog/article_imgs/99a7331d67f35fa576ad68c911fd839.png" width="700"></div><!-- ![photo](https://www.xvue.cn/blog/article_imgs/99a7331d67f35fa576ad68c911fd839.png "关注微信公众号，程序员小鸿") --><div align="center"><font color="red">加小鸿微信时请说明你的来意</font></div><div align="center"><font color="red">好友验证备注：转载/卖萌/合作/聊天/交个朋友 等等。</font></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://www.xvue.cn/blog/article_imgs/bed88508e01c9b44c3db0cc74c687b4.png&quot; alt=&quot;photo&quot; title=&quot;关注微信公众号，程序员小鸿&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;

      
    
    </summary>
    
    
      <category term="关于我" scheme="https://rohlin2019.github.io/rohlin.github.io/tags/%E5%85%B3%E4%BA%8E%E6%88%91/"/>
    
  </entry>
  
  <entry>
    <title>我的一年零六个月程序生涯：开挂人生</title>
    <link href="https://rohlin2019.github.io/rohlin.github.io/2019/06/13/%E6%88%91%E7%9A%84%E4%B8%80%E5%B9%B4%E9%9B%B6%E5%85%AD%E4%B8%AA%E6%9C%88%E7%A8%8B%E5%BA%8F%E7%94%9F%E6%B6%AF%EF%BC%9A%E5%BC%80%E6%8C%82%E4%BA%BA%E7%94%9F/"/>
    <id>https://rohlin2019.github.io/rohlin.github.io/2019/06/13/我的一年零六个月程序生涯：开挂人生/</id>
    <published>2019-06-13T02:04:07.000Z</published>
    <updated>2019-08-02T03:26:15.122Z</updated>
    
    <content type="html"><![CDATA[<p>配张图压压气势（马云在左，化腾在右，全场镇猿符）</p><p><img src="https://www.xvue.cn/blog/article_imgs/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190802112601.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><!-- ![photo](https://www.xvue.cn/blog/article_imgs/938a5d8583addbd45850f89dfa46856.png "关注微信公众号，程序员小鸿") --><p>小鸿是看了“纯洁的微笑”公众号文章”我的十年程序生涯：建模启航”有感而发才写的这篇文章，如果有关注他的公众号想必应该了解。</p><p>在小鸿开始讲“我的一年零六个月程序生涯：开挂人生”之前，还要从一年零六个月之前的生活至初三毕业开始讲起，等等？？为什么扯那么远？初三？小鸿毕业都啥年代了？</p><p>小鸿是00年的，（收（he）起（bu）下（long）巴（zui））。<br><br><br><font color="#3daad6" size="4">接触编程前</font></p><p>在小鸿2015年初三毕业以后那段时间，来到深圳进厂工作，一部分同学上了高中，一部分同学读了中职，一部分出来混社会。说实在，初次闯荡江湖那段时间确实是挺迷茫的，平时除了上班下班，基本没什么可做，迷茫是因为不知道自己要学什么也因为自己没什么太大的目标，只想着挣钱，出来工作谁不想挣钱呀。（小鸿觉得这里可以吹几千个字，没什么太大意义就不讲了）<br><br><br><font color="#3daad6" size="4">接触编程的开始</font></p><p>在2016年8月份，事态发生了转变，在QQ群里无意间看到了一张代码图，这时小鸿的兴趣就来了，找几个人问了问，确认是安卓代码，是AIDE手机软件开发的，里面是锁机代码，这些小鸿都记得比较清楚，于是也下载了这款软件去研究了一下，在9月份新建了一个QQ群自己当群主哈哈哈，那时候群名是“AIDE交流”群，时隔3年刚翻了一下小米云端有备份部分截图哈（可以忽略群头像）。</p><p><img src="https://www.xvue.cn/blog/article_imgs/6f4a56a3456a420e3cdc31a9ece1194.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><p>在小鸿从其它QQ群偷了一波小白和几位大神过来就开始成立“AIDE交流”群</p><p><img src="https://www.xvue.cn/blog/article_imgs/a8454e55d2ac3feb00d3986fce8e603.png" alt="photo" title="关注微信公众号，程序员小鸿"><br>目前群还在，更过N次群名，不怎么活跃就不透明公开了。<br><br><br><font color="#3daad6" size="4">接触编程的过程</font></p><p>小鸿在刚开始自学的是安卓，做了几个小例子，你们可以看看</p><p><img src="https://www.xvue.cn/blog/article_imgs/ce20dcc460adcc3a264690b7be8b06f.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><p><a href="https://pan.baidu.com/s/1GZNp0FGpD_VjsoYMTfdiUw" title="前往百度网盘" target="_blank" rel="noopener">https://pan.baidu.com/s/1GZNp0FGpD_VjsoYMTfdiUw</a><br>提取码：8xkl</p><p>由于不懂安卓代码的用法后来就转去自学JAVA，可以说学JAVA是很费劲，学了4个月JAVA用AWT包做了两个小东西，飞机大战和八大行星。<br><img src="https://www.xvue.cn/blog/article_imgs/9c757dca6df6bb9c0cff49e0f739519.png" alt="photo" title="关注微信公众号，程序员小鸿"><br><a href="https://pan.baidu.com/s/1xfzOang0-g2JV_npQ1X8RA" title="前往百度网盘" target="_blank" rel="noopener">https://pan.baidu.com/s/1xfzOang0-g2JV_npQ1X8RA</a><br>提取码：3s74</p><p>可以看看小鸿目前百度网盘的大小，都是长期累积的学习资料嘿嘿（网盘不够用已经开了个小号）<br><img src="https://www.xvue.cn/blog/article_imgs/2b79ffda8f2735910a2baad36954f7f.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><p>在自学长达一年时间的JAVA以后，发现很难找到工作才决定转前端，具体学习前端的时间小鸿记不太清楚了，大概是2017年下半年的时候。</p><br><font color="#3daad6" size="4">第一份前端工作</font><p>我们做互联网这行的都知道，学IT其一看中的是学历，其二看中的是技术，小鸿在开始自学前就已经想过了，还是相信技术其一，学历其二，（这里还是要补充一句：情商要高）， 主要还是因为对代码感兴趣就开始学了，网上找过一堆培训机构的教程，也经常误入歧途（教程太烂），踩坑还是蛮多的，在小鸿学完前端的基础知识(html,css,js)和一些js框架后，在拉勾网投了上百家公司，终于找到了自己的第一份前端工作（入坑以后无法自拔），这里说说首次去面试的过程。</p><p>上午11点左右，在拉勾网上面收到一条面试邀请通知，那个时候我还在流水线上工作，跟老板娘请一下午假期去面试。</p><p>12点下班随便吃了点东西就出发了，大概是12点15分的时候在等公交车（那是小鸿第一次坐公交哈哈，一脸懵的带了4个硬币上车），面试地点是福田区车公庙，面试时间是下午2点。到吉祥转地铁，那时候是小鸿第二次做地铁，第一次是在大人的陪同下出去耍，七拐八绕的转了一趟地铁，（腾讯地图在手天下我有，灵活运用互联网工具带来的便利），2点30分到了面试地点，虽然迟到了，不过还有一位面试的小姐姐比我还晚到，面试照常进行。</p><p>第一次面试心里还是蛮紧张的，HR给我们倒了杯水，先面试的是那位小姐姐，看到她跟HR聊我就会幻想我等会应该说啥，会不会哑口无言，想想就更激动了。</p><p>轮到我了，我首先是（故作镇定的）自我介绍了一下：我叫xxx，目前在某小厂工作，自学过一年java，也掌握前端方面的一些知识，目前是想找前端工作。HR还是蛮好讲话的，经过自我介绍以后问了我未来的发展规划，我回答说往全栈发展的，于是我把我随身携带的笔记本拿了出来，我找工作期间写过几个网站小案例，比如模仿oppo官网、网页版移动端QQ等页面给HR看了下（没有实战案例怎敢亲临战场），HR看起来还是非常认可的，在愉快的谈话以后HR给我拿了这次的笔试题，我接过笔试题看了下蛮简单的嘛（在应付笔试题之前我可是有做过功课的，疯狂刷题），除了小程序那部分有2道面试题没答出来，其它题都答出来了（可能有7道题左右，时间过了太长具体多少题我也既不太清楚），因为我没接触过小程序，其中有一题是小程序机试题，题目大概是这样的：用小程序写一个商品分类页，商品分类之间可以自由切换，我跟HR讲了下我没接触过小程序，HR就让我用前端技术写出来，后面还是用Jquery函数库写出来了。写完以后HR当时就给我讲了试用期薪资3.1k，由于年龄未满18周岁的关系，还要确认过罗湖总部那边，让我回去等消息，面试完以后也就晚上将近6点了，不过心里还是蛮高兴的，第一次面试就那么顺利。</p><p>第二天晚上就收到入职通知的消息，可把小鸿给高兴坏了哇，然后就跟厂里提出离职，允许我离职第二天就能走了，放飞自我的感觉真的很好。</p><p>初三毕业至在2017年11月25号，小鸿彻底结束了流水线的工作生涯，开始了自己的第一份前端工作。</p><br><font color="#3daad6" size="4">工作经历</font><ul><li>我的第一家公司  转正4k<br>入职以后，在公司从事前端开发，日常维护建站系统（做过多套建站模板），小程序的部分组件（拖拽式）迭代更新，偶尔（偶尔？不存在的，经常的事）搞搞设计，曾在这家公司做过230多张海报（小鸿设计不怎么样，一般网上直接模板）。在17年年会获得“先进工作者”荣誉证书。</li></ul><p><img src="https://www.xvue.cn/blog/article_imgs/9e45687bd7e1d657a3caccab3af5941.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><p>在工作业余时间学习了前端三大主流框架之一  vue.js，做过高仿QQ音乐实战项目，至今2019年06月13日项目各个接口还能正常使用，项目开源，详情可以查看博客地址：</p><p><a href="https://blog.csdn.net/qq_35610214/article/details/86701812" title="前往CSDN博客" target="_blank" rel="noopener">https://blog.csdn.net/qq_35610214/article/details/86701812</a></p><p>百度也能搜到<br><img src="https://www.xvue.cn/blog/article_imgs/91f3db12b8a146aaa2d832d755f5d8d.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><p>小鸿在这次高仿QQ音乐项目实战中学到了很多新的东西，node，webpack，axios等技术，随后在2019年2月14日跳槽了。<br><br></p><ul><li>我的第一家公司  转正4k</li></ul><ol><li>2019年后第一家面试（13k）<br>新年已过，在2019年后的2月12号早上我独自一人坐车下了深圳，中午12点多抵达宿舍，随便吃了点东西，紧接着刷笔试题，在拉勾网安排了下午2点的一家福田的公司面试，15：04分抵达公司楼下，万科富春东方大厦，安排的是4点的面试，刚到的时候在楼下刷一下笔试题然后联系了HR就上贵公司了，这家公司没有笔试题，跟HR很详细的聊了一下我的工作经历，这家公司因为项目紧张的问题，正处于填坑状态，就没让我通过，我有在努力的说服HR是否可以让我接手项目试试，HR说因为前面招了工作经验比我充足的也没做几天就离职了，由于工作经验不足的关系，offer落败。我翻了一下当时的聊天记录，还保留着，确认时间是2月12号下午15:52分。<br><img src="https://www.xvue.cn/blog/article_imgs/3d212f5ba9f3d82270af91dc1323c42.png" alt="photo" title="关注微信公众号，程序员小鸿"><br></li><li>2019年后第二家面试（9k）<br>紧接着我找到boss直聘的另外一家公司，安排了第二家面试，公司地址是大剧院，金龙大厦，来到大剧院仿佛回到了熟悉的地方，因为我曾跟随上一家公司搬到罗湖京基100大厦办公过几个月，后来又跟随公司搬到了大运软件小镇。</li></ol><p>下午将近5点，来到第二家贵公司门口联系了HR，开始给我安排了20几道笔试题，看了下笔试题讲的跟基本上跟前端框架有关，bootstrap，vue，jquery，小程序等，迷迷糊糊写了几题后HR就过来找我谈话了，问了我跟笔试题相关的问题，ok，第二家让我回来等通知，面试完已经是下午17:56分了，紧接着第三家公司走起。<br><img src="https://www.xvue.cn/blog/article_imgs/777e3ba326ea96078a6ee0cf082cb7d.png" alt="photo" title="关注微信公众号，程序员小鸿"><br><br></p><ol start="3"><li>2019年后第三家面试（11k）<br>第三家公司地址是在罗湖科技大厦，由于前面两家面试的关系，抽不出时间，这家被安排在晚上的时间来面试了，来到贵公司最近太安地铁站已经是傍6点多了<br><img src="https://www.xvue.cn/blog/article_imgs/f114c8451d2d947fa90da1a6813c4ff.png" alt="photo" title="关注微信公众号，程序员小鸿"></li></ol><p>在地铁站附近的快餐店吃了点东西，没什么胃口，然后继续前往罗湖科技大厦，在深圳流浪了半天，说实在是真的蛮累的，很想回家（但是想想先坚持下来就好了）。<br><img src="https://www.xvue.cn/blog/article_imgs/f51a9ba5361dc104b96a4edfb5e69fa.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><p>来到贵公司门口，跟HR通了个电话，大概7点多的时候上去了，因为他们在吃饭所以我上去比较晚，由于前面几家面试比较有经验了，刚开始我就很有礼貌的自我介绍了一下，面试的有HR和技术总监两个人，后面了解到贵公司是做小程序、小程序后台、拖拽式、云通讯之类的系统，自我认为还可以应付过来，跟HR聊了小程序，以及上一家公司做的拖拽后台和高仿QQ音乐实战项目，问了一些贵公司的详细情况，当晚拿到offer，可把小鸿给开心的，面试完已经是晚上20：35分。<br><br><br><font color="#3daad6" size="4">面试、经历后感</font></p><p>至今为止，我的一年零六个月的程序生涯，虽然时间不长，经验也不是很丰富，小鸿认为，自己掌握的技术经验到哪个程度是无法用工作多少年经验来衡量的，如果可以，就请拿出自己最得意的东西来表现自己。</p><p>学历固然重要，能力也固然重要，但人品也是最高的学历，学历也不一定影响你找到自己所期待的工作，如果有一种刻苦学习的精神，完全忽略学历，但前提是自己需要足够的优秀，只要自己有实力，依旧前行。大学学的是什么，学的是人端正的思维、思考方式，如何去为人处世的态度！</p><p>技术一直在更新，如果没有学习新的知识，就会很快的被这个社会淘汰，这是必然生存之道！小鸿想让读者们知道，要想在程序这个世界走下去，必须要不断学习，才能够完善不足。知其不足而完其之。</p><p>小鸿在17年看过一则短视频，讲述的是程序员的工作生活，里面有一句话是这样讲的：纵使来路坎坷，前路曲折，也不要失去一往无前的勇气。在这里我把视频分享给大家<br><a href="https://mp.weixin.qq.com/s?__biz=MzA5NDIzNzY1OQ==&mid=2735611223&idx=1&sn=c61dfcc9e13457cadb67a5887cd02b77&chksm=b6ab1be381dc92f58c88dd48e3bbeebf79652a50c6be3a5859d685326c80e9d38529932b4947&mpshare=1&srcid=0927RLGPbajQBQyZNjW49B3B&scene=21#wechat_redirect" target="_blank" rel="noopener">谨以此片，献礼中国百万IT人</a></p><br><font color="#3daad6" size="4">后述</font>最近小鸿开发了一款基于vue.js开发的xvue - 轻量级、响应式前端框架，目前组件还在迭代更新中，小鸿打算组件基本开发完成以后写几套模板给大家，当然有可能会收费，希望大家能尊重作者的劳动成果，框架是开源的，后续小鸿会出一些免费的视频教程给大家学习。<p>好啦，如果有想问的可以在下方扫码关注公众号，小鸿等你来撩~<br><img src="https://www.xvue.cn/blog/article_imgs/e4b548ec8b211919dec6b8d2b5a0518.png" alt="photo" title="关注微信公众号，程序员小鸿"><br><img src="https://www.xvue.cn/blog/article_imgs/3654be78bad1373b765a27c823dd761.png" alt="photo" title="关注微信公众号，程序员小鸿"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;配张图压压气势（马云在左，化腾在右，全场镇猿符）&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://www.xvue.cn/blog/article_imgs/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20190802112601.png&quot; 
      
    
    </summary>
    
    
      <category term="面试经历" scheme="https://rohlin2019.github.io/rohlin.github.io/tags/%E9%9D%A2%E8%AF%95%E7%BB%8F%E5%8E%86/"/>
    
  </entry>
  
  <entry>
    <title>xvue-ui新增小功能V1.3.16</title>
    <link href="https://rohlin2019.github.io/rohlin.github.io/2019/04/14/xvue-ui%E6%96%B0%E5%A2%9E%E5%B0%8F%E5%8A%9F%E8%83%BDV1-3-16/"/>
    <id>https://rohlin2019.github.io/rohlin.github.io/2019/04/14/xvue-ui新增小功能V1-3-16/</id>
    <published>2019-04-14T01:59:12.000Z</published>
    <updated>2019-08-02T02:03:27.883Z</updated>
    
    <content type="html"><![CDATA[<p>小鸿这几天由于工作时间的关系，没来得及更新新组件，此次更新是对原有Dialog弹框和Message消息框更新一些小功能，让我们来看看更新了哪些新功能！</p><h3 id="Dialog弹框"><a href="#Dialog弹框" class="headerlink" title="Dialog弹框"></a>Dialog弹框</h3><p>弹框右上角新增关闭按钮。</p><p>isCancelBtn：新增是否显示取消按钮，Boolean类型，默认值true。</p><p>isOkBtn：新增是否显示确定按钮，Boolean类型，默认值true。</p><p>isCancel：新增会否显示弹窗右上角关闭按钮，Boolean类型，默认值true。</p><p>content：content不仅仅支持文字那么简单哦，目前还可以支持html的任何标签，比如在content放一张图片，代码是这样写：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$Dialog.default(&#123;</span><br><span class="line">    title:<span class="string">'自定义content内容'</span>,</span><br><span class="line">    content:<span class="string">'&lt;div style="text-align:center;"&gt;&lt;img style="width:200px;height:200px;" src="http://www.xvue.cn/dist/static/img/xvue-ui.dd56c7b.png"&gt;&lt;/img&gt;&lt;/div&gt;'</span>,</span><br><span class="line">    isCancel:<span class="literal">false</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>显示效果<br><img src="https://www.xvue.cn/blog/article_imgs/964a69e5f848bc8082cbf374ad4e9f0.png" alt="photo" title="关注微信公众号，程序员小鸿"><br>不仅仅是这些功能，小鸿还对原有的close()函数更名为cover()函数，一般来讲是不能轻易更改框架原有的功能，这样会对原有用户更新框架代码造成未知的错误，所以close()还保留，并新增cover()函数，因为框架用的人还不多，以后小鸿一定认真考察命名方面的问题。</p><p>cancel()：点击取消按钮触发的回调函数。</p><p>ok()：点击确定按钮触发的回调函数。</p><p>cover()：点击弹框外部灰色背景触发的回调函数。</p><p>这三个函数都返回一个内部Dialog对象，可修改原先设置的标题、内容、关闭弹框等一系列相关属性。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$Dialog.default(&#123;</span><br><span class="line">  title:<span class="string">'温馨提醒'</span>,</span><br><span class="line">  content:<span class="string">'欢迎使用xvue-ui框架'</span>,</span><br><span class="line">  ok(e)&#123;</span><br><span class="line">      e.isShow = <span class="literal">false</span>; <span class="comment">//关闭弹框</span></span><br><span class="line">      e.dialogList[<span class="number">0</span>].title = <span class="string">'修改后的标题'</span>; <span class="comment">//修改标题</span></span><br><span class="line">      e.dialogList[<span class="number">0</span>].content= <span class="string">'修改后的内容'</span>; <span class="comment">//修改内容</span></span><br><span class="line">      e.dialogList[<span class="number">0</span>].cancelText = <span class="string">'取消按钮'</span>; <span class="comment">//修改取消按钮的内容</span></span><br><span class="line">      e.dialogList[<span class="number">0</span>].confirmText = <span class="string">'确定按钮'</span>; <span class="comment">//修改确定按钮的内容</span></span><br><span class="line">      e.dialogList[<span class="number">0</span>].isCancelBtn = <span class="literal">false</span>; <span class="comment">//隐藏取消按钮</span></span><br><span class="line">      e.dialogList[<span class="number">0</span>].isOkBtn = <span class="literal">false</span>; <span class="comment">//隐藏确定按钮</span></span><br><span class="line">      e.dialogList[<span class="number">0</span>].isClose = <span class="literal">false</span>; <span class="comment">//隐藏右上角关闭按钮      </span></span><br><span class="line">  &#125;</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><h3 id="message消息框"><a href="#message消息框" class="headerlink" title="message消息框"></a>message消息框</h3><p>backgroundColor：新增自定义消息框背景颜色，凡是css支持的颜色值都能使用。</p><p>textColor：新增自定义消息框文字颜色，凡是css支持的颜色值都能使用。</p><p>slots：优化内部代码，可定义消息框内容，支持html标签，使用slots属性content属性将不会生效，content属性不支持html标签。</p><p>代码片段</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.$Message.default(&#123;</span><br><span class="line">    slots:<span class="string">'&lt;div style="text-align:center;"&gt;&lt;img style="width:50px;height:50px;" src="http://www.xvue.cn/dist/static/img/xvue-ui.dd56c7b.png"&gt;&lt;p style="text-align:center;"&gt;欢迎来到xvue-ui官方网站&lt;/p&gt;&lt;/div&gt;'</span>,</span><br><span class="line">    backgroundColor:<span class="string">'#fff'</span>,</span><br><span class="line">    textColor:<span class="string">'rgb(99,205,255)'</span>,</span><br><span class="line">    duration:<span class="number">1</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>效果图<br><img src="https://www.xvue.cn/blog/article_imgs/f530eebc03e323a2d9176e58de4eb58.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><p>框架后续的更新与迭代还需要你们认真反馈，小鸿收到你们反馈的新功能或者bug都会安排逐一开发修复。扫一扫下方二维码关注公众号：程序员小鸿 。学习更多知识!<br><img src="https://www.xvue.cn/blog/article_imgs/e4b548ec8b211919dec6b8d2b5a0518.png" alt="photo" title="关注微信公众号，程序员小鸿"><br><img src="https://www.xvue.cn/blog/article_imgs/3654be78bad1373b765a27c823dd761.png" alt="photo" title="关注微信公众号，程序员小鸿"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;小鸿这几天由于工作时间的关系，没来得及更新新组件，此次更新是对原有Dialog弹框和Message消息框更新一些小功能，让我们来看看更新了哪些新功能！&lt;/p&gt;
&lt;h3 id=&quot;Dialog弹框&quot;&gt;&lt;a href=&quot;#Dialog弹框&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
      <category term="xvue-ui框架" scheme="https://rohlin2019.github.io/rohlin.github.io/tags/xvue-ui%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>前端xvue-ui框架以及官方网站正式上线啦！</title>
    <link href="https://rohlin2019.github.io/rohlin.github.io/2019/04/10/%E5%89%8D%E7%AB%AFxvue-ui%E6%A1%86%E6%9E%B6%E4%BB%A5%E5%8F%8A%E5%AE%98%E6%96%B9%E7%BD%91%E7%AB%99%E6%AD%A3%E5%BC%8F%E4%B8%8A%E7%BA%BF%E5%95%A6%EF%BC%81/"/>
    <id>https://rohlin2019.github.io/rohlin.github.io/2019/04/10/前端xvue-ui框架以及官方网站正式上线啦！/</id>
    <published>2019-04-10T01:50:46.000Z</published>
    <updated>2019-08-02T01:58:44.917Z</updated>
    
    <content type="html"><![CDATA[<p>hi，大家好久不见啦！小鸿这段时间闭关将近3个星期的时间，研究出了一套前端ui框架，开发过程中遇到的bug也是数不胜数，下面就让小鸿来介绍一下这个框架的相关知识！</p><h3 id="什么是xvue-ui框架"><a href="#什么是xvue-ui框架" class="headerlink" title="什么是xvue-ui框架"></a>什么是xvue-ui框架</h3><p><img src="https://www.xvue.cn/blog/article_imgs/123dc1e4adf7657feafa2d080abb260.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><p>关于框架的命名我真是想了好久好久，尝试用过citn-ui、xx-ui、xc-ui、vue-ui、xh-ui、ah-ui来命名，感觉说起来都不是那么的流畅，也有框架重名的问题，起个名称老难受啦，最后还是打算将其命名为xvue-ui框架，对于这个框架名称也是脱口而出，对有vue开发经验的开发人员来讲也是易记。</p><p>xvue-ui是一款基于vue.js的用法进行封装的框架，也是三次封装。框架组件不仅仅有常用的基础组件，还提供了对特殊组件或者特殊功能的封装。</p><ul><li><p>Xvue-ui是一款基于vue.js开发的响应式框架,包含丰富的css和js组件。</p></li><li><p>除了基础组件，还为你提供了很多封装的大型组件。</p></li><li><p>轻量级，语义化标签，上手简单。</p></li><li><p>已为你需要在项目中使用的很多专用组件做好准备。做到一个适用于任何应用的解决方案。</p></li></ul><p>说到响应式，目前多数框架要么pc端要么移动端，总是有两者不可兼得的触感，在小鸿看来只是兼容两者会有些麻烦，并不是不能达到两端自适应的效果，小鸿之所以开发这款框架就是为了解决目前网站上响应式的问题，做到轻量级，完美的流畅体验，想用即用，并在基础组件上进行功能的扩展。额外还扩展新的功能，具体什么功能后续会逐一在官网更新，记得持续关注哦！</p><p>框架后续的更新与迭代还需要你们认真反馈，小鸿收到你们反馈的新功能或者bug都会安排逐一开发修复。扫一扫下方二维码关注公众号：程序员小鸿 。学习更多知识！</p><p><img src="https://www.xvue.cn/blog/article_imgs/e4b548ec8b211919dec6b8d2b5a0518.png" alt="photo" title="关注微信公众号，程序员小鸿"><br><img src="https://www.xvue.cn/blog/article_imgs/3654be78bad1373b765a27c823dd761.png" alt="photo" title="关注微信公众号，程序员小鸿"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;hi，大家好久不见啦！小鸿这段时间闭关将近3个星期的时间，研究出了一套前端ui框架，开发过程中遇到的bug也是数不胜数，下面就让小鸿来介绍一下这个框架的相关知识！&lt;/p&gt;
&lt;h3 id=&quot;什么是xvue-ui框架&quot;&gt;&lt;a href=&quot;#什么是xvue-ui框架&quot; class
      
    
    </summary>
    
    
      <category term="xvue-ui框架" scheme="https://rohlin2019.github.io/rohlin.github.io/tags/xvue-ui%E6%A1%86%E6%9E%B6/"/>
    
  </entry>
  
  <entry>
    <title>什么是前端？前端入门需要学习哪些技术？学习前端需要具备什么样的学习条件？</title>
    <link href="https://rohlin2019.github.io/rohlin.github.io/2019/03/20/%E4%BB%80%E4%B9%88%E6%98%AF%E5%89%8D%E7%AB%AF%EF%BC%9F%E5%89%8D%E7%AB%AF%E5%85%A5%E9%97%A8%E9%9C%80%E8%A6%81%E5%AD%A6%E4%B9%A0%E5%93%AA%E4%BA%9B%E6%8A%80%E6%9C%AF%EF%BC%9F%E5%AD%A6%E4%B9%A0%E5%89%8D%E7%AB%AF%E9%9C%80%E8%A6%81%E5%85%B7%E5%A4%87%E4%BB%80%E4%B9%88%E6%A0%B7%E7%9A%84%E5%AD%A6%E4%B9%A0%E6%9D%A1%E4%BB%B6%EF%BC%9F/"/>
    <id>https://rohlin2019.github.io/rohlin.github.io/2019/03/20/什么是前端？前端入门需要学习哪些技术？学习前端需要具备什么样的学习条件？/</id>
    <published>2019-03-20T01:50:46.000Z</published>
    <updated>2019-08-02T01:52:49.041Z</updated>
    
    <content type="html"><![CDATA[<center>注：<font color="red">文章发布于"程序员小鸿"公众号，2019年3月20日</font></center><p><img src="https://www.xvue.cn/blog/article_imgs/00c367d56e2318fac390c45d446e816.png" alt="photo" title="关注微信公众号，程序员小鸿"></p><p>据小鸿了解到，多数小白刚开始接触编程的时候并不知道自己真正想学什么，也不知道自己究竟适合学习什么样的技术，有部分同学就会盲目的寻找资料去学，不要着急，小鸿这里带大家了解什么是前端。前端入门需要学习哪些技术。学习前端需要具备什么样的学习条件。</p><h4 id="什么是前端？"><a href="#什么是前端？" class="headerlink" title="什么是前端？"></a>什么是前端？</h4><p><font color="#b2b2b2">前端-顾名思义：就是端茶倒水的工作，端着茶杯，在公司门前端茶倒水，称之为前端。（这里是小鸿开个玩笑让大家放松下心情啦~~）</font></p><p>&emsp;&emsp;对于初学者首先要了解的是，什么是前端？前端是做什么的？前端即网站前台的部分，通俗的讲就是我们平时在浏览器搜索出来的网页都属于前端，前端分为移动端（手机端）和PC端（电脑端）两部分。</p><p>&emsp;&emsp;前端页面又分为静态页面和动态页面，在最开始时，前端页面主要是静态网页，所谓的静态网页就是没有与任何用户进行交互，仅仅只是供读者浏览的网页。随着时代的发展、技术的提升，单一的图片和文字并不能满足用户的需求，动态网页就慢慢的演变而来，所谓动态网页是指用户不仅仅可以浏览网页，还可以与服务器进行交互。怎么与服务器交互呢？比如用户想在网站登录自己的账户，在登录表单中故意输错账号密码，这时客户端（即浏览器）会向服务器发起验证请求，服务器检测到用户输入的账号密码不正确，则会给用户返回“您输入的账号密码不正确”标识。</p><p>&emsp;&emsp;前端网页开发就如同在写字板上画画，学会灵活运用纸笔，在写字板上画出你想要的结构布局，颜色填充。实际上前端就是这样，灵活运用html（结构），css（样式），javascript（行为），就能开发出你想要的页面。</p><p>&emsp;&emsp;在很早以前，开发网站的一个页面需要分为两部分页面代码（移动端和PC端），那个时候并没有响应式布局的说法，响应式的诞生是为了解决网页在不同的终端可以自适应，通过响应式能使用户在浏览网页在手机和平板电脑上有更好的阅读体验。但是响应式布局有些缺点就是兼容终端设备工作量大，效率低下、代码容易混淆。</p><pre><code>&quot;响应式布局是Ethan Marcotte在2010年5月份提出的一个概念，简而言之，就是一个网站能够兼容多个终端——而不是为每个终端做一个特定的版本。这个概念是为解决移动互联网浏览而诞生的。&quot;  </code></pre><p align="right">-- 百度百科</p><h4 id="前端入门需要学习哪些技术？"><a href="#前端入门需要学习哪些技术？" class="headerlink" title="前端入门需要学习哪些技术？"></a>前端入门需要学习哪些技术？</h4><p>简单的从初学者方面来说，需要掌握的知识有HTML、CSS、JavaScript、jQuery框架。这些都是初学者入门必学的知识点。</p><h5 id="1-HTML"><a href="#1-HTML" class="headerlink" title="1.HTML"></a>1.HTML</h5><p><img src="https://www.xvue.cn/blog/article_imgs/a7016b4e36f5b7f0ea08f6d2cf20ef8.png" alt="HTML" title="关注微信公众号，程序员小鸿"></p><p>&emsp;&emsp;HTML（HyperText Mark-up Language）超文本标记语言，“超文本”就是指页面内可以包含图片、链接，甚至音乐、程序等非文字元素，即平常上网所看到的的网页。是开发网页必备的编程语言，也是目前web领域应用最广泛的语言。</p><h5 id="2-CSS"><a href="#2-CSS" class="headerlink" title="2.CSS"></a>2.CSS</h5><p><img src="https://www.xvue.cn/blog/article_imgs/89424814fb98c71190fecb200eb075d.png" alt="HTML" title="关注微信公众号，程序员小鸿"></p><p>&emsp;&emsp;CSS（Cascading Style Sheets）层叠样式表，是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。可以为网页自定义样式，使得CSS达到美化页面排版的目的，使得网页更加生动形象。</p><h5 id="3-JavaScript"><a href="#3-JavaScript" class="headerlink" title="3.JavaScript"></a>3.JavaScript</h5><p><img src="https://www.xvue.cn/blog/article_imgs/6463402aabb55b61e81a1eccf88a7ec.png" alt="HTML" title="关注微信公众号，程序员小鸿"></p><p>&emsp;&emsp;JavaScript是网页的直译式脚本语言，也是弱类型语言，它可以运行在HTML网页，添加各式各样的动态功能，比如用户登录的表单验证，创建cookies，检测访客的浏览器信息等。</p><h5 id="4-jQuery框架"><a href="#4-jQuery框架" class="headerlink" title="4.jQuery框架"></a>4.jQuery框架</h5><p><img src="https://www.xvue.cn/blog/article_imgs/43fbd913151fb69626983624ba00186.png" alt="HTML" title="关注微信公众号，程序员小鸿"></p><p>&emsp;&emsp;jQuery框架也被称为jQuery函数库，是一个快捷、简洁的JavaScript框架，里面对原生的JavaScript封装了各式各样常用的功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。</p><h3 id="学习前端需要具备什么样的学习条件？"><a href="#学习前端需要具备什么样的学习条件？" class="headerlink" title="学习前端需要具备什么样的学习条件？"></a>学习前端需要具备什么样的学习条件？</h3><p><font color="#b2b2b2">根底深，内功深厚，悟性要极高者7年可成，次者14年可成（开玩笑的啦，能保住头发才是重点~~）</font></p><p>&emsp;&emsp;对于初学者来讲，学习前端开发并没有很多条件，因为前端的门槛相对于其它行业而言是很低的，学习曲线是先易后难，很适合初学者入门。相对较难的是JavaScript，如果是学过java的再去学JavaScript会简单很多。</p><p>&emsp;&emsp;小鸿建议大家边学边练，基础入门知识学完以后可以模仿一些比较大型的网站，一个网站页面分为很多部分，正所谓“学着会，拿起键盘，哎，我刚要干嘛来着”。在做网站之前可以把相同的部分抽离出来，划分一下网站网页面的每一块，方便多个页面之前可以共用同一套相同的代码，节省代码空间，修改起来也简单，多理解自己写代码的用意，多想想还有没有其他需要改进的地方。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;center&gt;注：&lt;font color=&quot;red&quot;&gt;文章发布于&quot;程序员小鸿&quot;公众号，2019年3月20日&lt;/font&gt;&lt;/center&gt;

&lt;p&gt;&lt;img src=&quot;https://www.xvue.cn/blog/article_imgs/00c367d56e2318fac
      
    
    </summary>
    
    
      <category term="前端" scheme="https://rohlin2019.github.io/rohlin.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
</feed>
